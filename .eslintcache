[{"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\index.js":"1","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\App.js":"2","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Backdrop\\Backdrop.js":"3","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\PoPup\\PoPup.js":"4","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Sidebar\\Sidebar.js":"5","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\home.jsx":"6","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\contactUs.jsx":"7","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\about.jsx":"8","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\videos.jsx":"9","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\navbar.jsx":"10","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\online.jsx":"11","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\search.jsx":"12","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\videoCategories.jsx":"13","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Pages\\Profile\\Profile.js":"14","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\chooseWay.js":"15","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Spinner\\Spinner.js":"16","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\foodPopup.jsx":"17","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\verifyEmail.jsx":"18","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\signup.jsx":"19","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\forgetPassword.jsx":"20","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\resetPassword.jsx":"21","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\verify.jsx":"22","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\login.jsx":"23","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\chartjs.jsx":"24","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\video.jsx":"25","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Helper\\Input\\Input.js":"26","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Helper\\shared\\shared.js":"27"},{"size":440,"mtime":1617066998000,"results":"28","hashOfConfig":"29"},{"size":3500,"mtime":1618409744122,"results":"30","hashOfConfig":"29"},{"size":649,"mtime":1617066998000,"results":"31","hashOfConfig":"29"},{"size":2046,"mtime":1618411340392,"results":"32","hashOfConfig":"29"},{"size":1547,"mtime":1617066998000,"results":"33","hashOfConfig":"29"},{"size":9657,"mtime":1618199809944,"results":"34","hashOfConfig":"29"},{"size":1114,"mtime":1617066998000,"results":"35","hashOfConfig":"29"},{"size":863,"mtime":1617066998000,"results":"36","hashOfConfig":"29"},{"size":4685,"mtime":1618293361711,"results":"37","hashOfConfig":"29"},{"size":2426,"mtime":1618294099696,"results":"38","hashOfConfig":"29"},{"size":6711,"mtime":1618292632604,"results":"39","hashOfConfig":"29"},{"size":3588,"mtime":1618293859729,"results":"40","hashOfConfig":"29"},{"size":2393,"mtime":1618292710696,"results":"41","hashOfConfig":"29"},{"size":43320,"mtime":1618409649800,"results":"42","hashOfConfig":"29"},{"size":2511,"mtime":1618293859713,"results":"43","hashOfConfig":"29"},{"size":167,"mtime":1617066998000,"results":"44","hashOfConfig":"29"},{"size":7821,"mtime":1618409913171,"results":"45","hashOfConfig":"29"},{"size":4555,"mtime":1617066998000,"results":"46","hashOfConfig":"29"},{"size":7375,"mtime":1617066998000,"results":"47","hashOfConfig":"29"},{"size":3498,"mtime":1617066998000,"results":"48","hashOfConfig":"29"},{"size":5058,"mtime":1617066998000,"results":"49","hashOfConfig":"29"},{"size":4581,"mtime":1617066998000,"results":"50","hashOfConfig":"29"},{"size":3826,"mtime":1618293859729,"results":"51","hashOfConfig":"29"},{"size":1952,"mtime":1618034542919,"results":"52","hashOfConfig":"29"},{"size":1277,"mtime":1618289119614,"results":"53","hashOfConfig":"29"},{"size":1625,"mtime":1617066998000,"results":"54","hashOfConfig":"29"},{"size":1190,"mtime":1617066998000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"l31cf5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\index.js",[],["119","120"],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\App.js",["121"],"import React, { useState, useCallback, useRef } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/home\";\r\nimport Nav from \"./Components/navbar\";\r\n\r\nimport Contact from \"./Components/contactUs\";\r\nimport About from \"./Components/about\";\r\nimport Sidebar from \"./UI/Sidebar/Sidebar\";\r\nimport Backdrop from \"./UI/Backdrop/Backdrop\";\r\nimport PoPup from \"./UI/PoPup/PoPup\";\r\nimport Profile from \"./Pages/Profile/Profile\";\r\nimport Online from \"./Components/online\";\r\nimport VideoCategory from \"./Components/videoCategories\";\r\nimport Videos from \"./Components/videos\";\r\n\r\nimport Search from \"./Components/search\";\r\nfunction App() {\r\n  const [open, setOpen] = useState(false);\r\n  const [u, setU] = useState(false);\r\n  const [m, setM] = useState(false);\r\n  const [outer, setOuter] = useState(false);\r\n  const [inner, setInnre] = useState(false);\r\n  const [param, setParam] = useState(false);\r\n\r\n  const openHandler = useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const closeHandler = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n  const [open2, setOpen2] = useState(false);\r\n\r\n  const openHandler2 = useCallback((url, method, o, i, u) => {\r\n    setOpen2(true);\r\n    setU(url);\r\n    setM(method);\r\n    if (url === \"/food\") {\r\n      setOuter(o);\r\n      setInnre(i);\r\n      setParam(u);\r\n    }\r\n  }, []);\r\n\r\n\r\n  console.log(param)\r\n  const closeHandler2 = useCallback(() => {\r\n    setOpen2(false);\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <BrowserRouter>\r\n        <Nav openHandler={openHandler} openHandler2={openHandler2} />\r\n        <Backdrop\r\n          open={open}\r\n          clickHandler={openHandler}\r\n          closeHandler={closeHandler}\r\n          closeHandler2={closeHandler2}\r\n        />\r\n        <Sidebar\r\n          open={open}\r\n          clickHandler={openHandler}\r\n          closeHandler={closeHandler}\r\n        />\r\n        <PoPup\r\n          open={open2}\r\n          url={u}\r\n          method={m}\r\n          outer={outer}\r\n          inner={inner}\r\n          param={param}\r\n          clickHandler2={openHandler2}\r\n          closeHandler={closeHandler2}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={(props) => (\r\n              <Home closeHandler2={closeHandler2} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/profile\"\r\n            render={(props) => (\r\n              <Profile\r\n                closeHandler2={closeHandler2}\r\n                openHandler2={openHandler2}\r\n                open2={open2}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/profile/:id\"\r\n            render={(props) => (\r\n              <Profile\r\n                closeHandler2={closeHandler2}\r\n                openHandler2={openHandler2}\r\n                open2={open2}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/search\" component={Search} />\r\n          <Route exact path=\"/online/:id\" component={Online} />\r\n          <Route exact path=\"/videoCategories\" component={VideoCategory} />\r\n          <Route exact path=\"/Videos/:id\" component={Videos} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Backdrop\\Backdrop.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\PoPup\\PoPup.js",["122","123"],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Sidebar\\Sidebar.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\home.jsx",["124"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport style from \"../assets/css/home.module.css\";\nimport Star from \"../images/svg/star.svg\";\nimport Wave1 from \"../images/svg/wave-1.svg\";\nimport Wave2 from \"../images/svg/wave-2.svg\";\nimport QR from \"../images/svg/qr.svg\";\nimport gym1 from \"../images/gym-1.jpg\";\nimport gym2 from \"../images/gym-2.jpg\";\nimport gym3 from \"../images/gym-3.jpg\";\nimport join from \"../images/join-now.jpg\";\n// import doctor from \"../images/doctor.png\";\nimport caption from \"../images/Logo/icon-caption.png\";\nimport icon from \"../images/Logo/icon.png\";\nimport hover from \"../images/Logo/icon-hover.png\";\nimport Doc from \"../images/svg/doctor.svg\";\n\nexport class Home extends Component {\n  componentDidMount() {\n    axios\n      .get(\"profile\")\n      .then((res) => {\n        this.setState({\n          user: res.data,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  render() {\n    // if (this.state.user) {\n    //   return (\n    //     <div className=\"conatiner mt-5\">\n    //       <h2> You are login successfully </h2>\n    //       <h3>Welcome, {this.state.user.username}</h3>\n    //     </div>\n    //   )\n    // }\n    return (\n      <React.Fragment>\n        <section id=\"top\" onClick={() => this.props.closeHandler2()}>\n          <div\n            id=\"carouselExampleControls\"\n            className=\"carousel slide\"\n            data-bs-ride=\"carousel\"\n            onClick={() => this.props.closeHandler2()}\n          >\n            <div className=\"carousel-inner\">\n              <div className=\"carousel-item active\">\n                <div className={`${style.images} ${style.image1}`}></div>\n\n                <div className={style.fcaption}>\n                  <h3>play your favorite workout</h3>\n                  <div className={style.btncontainer}>\n                    <button className={style.fbtn}>get in contact</button>\n                    <button className={style.fbtn}>learn more</button>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"carousel-item\">\n                <div className={`${style.images} ${style.image2}`}></div>\n\n                <div className={style.scaption}>\n                  <h3>Take the next step to be more fit</h3>\n                  <p>\n                    Online personal training makes it easy to fit a good workout\n                    into any routine. Get a small portion of the time and\n                    dedicate it to your health and fitness. You deserve it, and\n                    we can't wait to meet you.\n                  </p>\n\n                  <div className={style.btncontainer}>\n                    <button className={style.sbtn}>View Schedule</button>\n                    <button className={style.sbtn}>Tutorial</button>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"carousel-item\">\n                <div className={`${style.images} ${style.image3}`}></div>\n\n                <div className={style.tcaption}>\n                  <h3>Have you ever felt bored with the diet ?</h3>\n                  <p>\n                    we will suggest alternatives to you with the same number of\n                    calories for fruits and vegetables that you want to change\n                    in easy ways\n                  </p>\n                  <button className={style.tbtn}>learn more</button>\n                </div>\n              </div>\n\n              <div className=\"carousel-item\">\n                <div className={`${style.images} ${style.image4}`}></div>\n\n                <div className={style.ftcaption}>\n                  <h3>\n                    do you have a problem with dealing with <br /> the gym\n                    machines?\n                  </h3>\n                  <p>\n                    scan QR-code and will show you <br /> how to use the gym\n                    machines\n                  </p>\n                  <div className={style.link}>\n                    <a href=\"#\"> learn more</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <a\n              className={`${style[\"carousel-control-prev\"]}`}\n              href=\"#carouselExampleControls\"\n              role=\"button\"\n              data-bs-slide=\"prev\"\n            >\n              <span className=\"carousel-control-prev-icon\"></span>\n            </a>\n            <a\n              className={`${style[\"carousel-control-next\"]}`}\n              href=\"#carouselExampleControls\"\n              role=\"button\"\n              data-bs-slide=\"next\"\n            >\n              <span className=\"carousel-control-next-icon\"></span>\n            </a>\n          </div>\n        </section>\n\n        <section className={style.recommend}>\n          <div className=\"container\">\n            <div className={style.qrsection}>\n              <img src={QR} alt=\"qr-code\" className={style.qrimg} />\n              <h4>\n                you can scan QR-code which available on sports machines, and We\n                show him the correct way to perform this exercise.\n              </h4>\n            </div>\n            <button className={style.qrbtn}>learn more</button>\n            <h2>Recommended gym for you</h2>\n\n            <div className={style.cards}>\n              <div className={style.card}>\n                <img src={gym1} alt=\"gym\" className={style.cardimg} />\n\n                <div className={style.cardcaption}>\n                  <h3>Elsheik zayed city</h3>\n                  <span>\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                  </span>\n                </div>\n              </div>\n              <div className={style.card}>\n                <img src={gym2} alt=\"gym\" className={style.cardimg} />\n\n                <div className={style.cardcaption}>\n                  <h3>Elsheik zayed city</h3>\n                  <span>\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                  </span>\n                </div>\n              </div>\n              <div className={style.card}>\n                <img src={gym3} alt=\"gym\" className={style.cardimg} />\n                <div className={style.cardcaption}>\n                  <h3>Elsheik zayed city</h3>\n                  <span>\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                    <img src={Star} alt=\"stars\" className={style.svg} />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <div className={style.onlinetraining}>\n          <div className={`container ${style.flexsection}`}>\n            <div className={style.textsection}>\n              <h2>online training</h2>\n              <p>\n                {\" \"}\n                Live training is the best way to make exercises at home to keep\n                fit and improve personal fitness and health, Since the workout\n                sessions aren’t done in person, you can choose to workout\n                anytime you like. We’re all busy. You don’t want to have to\n                coordinate schedules with someone who trains in a gym across\n                town, or rush to and from work to get to the gym. Another bonus\n                is that many online workouts contain a lot of bodyweight\n                exercises, which can be completed at home.\n              </p>\n            </div>\n            <div className={style.joinnow}>\n              <img src={join} alt=\"join now\" />\n            </div>\n          </div>\n        </div>\n\n        <div className={style.waveone}>\n          <img src={Wave1} alt=\"wave\" />\n        </div>\n        <div className={style.wavetwo}>\n          <img src={Wave2} alt=\"wave\" />\n        </div>\n\n        <div className={style.askdoctor}>\n          <div className=\"container\">\n            <img src={Doc} alt=\"doctor\" />\n            <div className={style.asktext}>\n              <h2>ask doctor</h2>\n              <p>\n                If you want to communicate with a doctor, gym trainer, or a\n                nutritionist you can do this , just signup and the official will\n                respond to you with a diet suitable for your condition\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <footer className=\"links\">\n          <ul>\n            <li className={style.icon}>\n              <img src={icon} alt=\"icon\" />\n            </li>\n            <li className={style.iconhover}>\n              <img src={hover} alt=\"icon-hover\" />\n            </li>\n          </ul>\n          <div className={style.iconcaption}>\n            <img src={caption} alt=\"icon-caption\" />\n          </div>\n          <p>\n            &copy;\n            <script>document.write(new Date().getFullYear());</script> team work\n            smart fitness system .\n          </p>\n          <p>\n            &ldquo;its going to be hard, but hard is not impossible.&rdquo;\n            &mdash; Project owners\n          </p>\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\contactUs.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\about.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\videos.jsx",["125","126","127"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport style from \"../assets/css/online.module.css\";\r\nimport style1 from \"../assets/css/home.module.css\";\r\nimport caption from \"../images/Logo/icon-caption.png\";\r\nimport icon from \"../images/Logo/icon.png\";\r\nimport hover from \"../images/Logo/icon-hover.png\";\r\n\r\nimport search from \"../images/online/search.png\";\r\nimport Video from \"./video\";\r\nimport axios from \"axios\";\r\n\r\nfunction Videos(props) {\r\n  const slider = useRef();\r\n  const prevBtn = useRef();\r\n  const nextBtn = useRef();\r\n\r\n  const [counter, setCounter] = useState(1);\r\n  const size = 200;\r\n\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const [sear,setSearch]=useState(\"\")\r\n\r\n  useEffect(() => {\r\n    // console.log(props.match.params.id)\r\n    axios\r\n      .get(\"/getRecommindations?limit=10\")\r\n      .then((res) => setRecommendations(res.data.docs));\r\n\r\n    axios\r\n      .get(`/videos?limit=8&&category=${props.match.params.id}&&title=${sear}`)\r\n      .then((res) => setVideos(res.data.docs));\r\n  }, [props.match.params.id,sear]);\r\n\r\n\r\n  useEffect(() => {\r\n    slider.current.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n  }, []);\r\n\r\n  const nextHandler = () => {\r\n    if (counter === recommendations.length - 6) return;\r\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\r\n    let c = counter + 1;\r\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\r\n    setCounter(c);\r\n  };\r\n  const prevHandler = () => {\r\n    if (counter <= 0) return;\r\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\r\n    let c = counter - 1;\r\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\r\n    setCounter(c);\r\n  };\r\n\r\n  return (\r\n    <section class={style.online}>\r\n      <div class=\"container\">\r\n        <div class={style.searchBox}>\r\n          <img class={style.searchIcon} src={search} alt=\"search-icon\" />\r\n          <input\r\n            class={style.searchTxt}\r\n            type=\"search\"\r\n            placeholder=\"type to search\"\r\n            onChange={(e)=>setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div class={style.sliderContainer}>\r\n          <div class={style.slider} ref={slider}>\r\n            {recommendations.length > 0\r\n              ? recommendations.map((r) => {\r\n                  return (\r\n                    <img\r\n                      key={r.id}\r\n                      id={r.id}\r\n                      src={r.image}\r\n                      alt=\"\"\r\n                      style={{ width: \"200px\", height: \"200px\",cursor:'pointer' }}\r\n                      onClick={()=>{\r\n                        window.location.href=`/online/${r.id}`\r\n                      }}\r\n                    />\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n\r\n        <a\r\n          class={style.carouselControlPrev}\r\n          ref={prevBtn}\r\n          onClick={() => nextHandler()}\r\n        >\r\n          <span class={style.carouselControlPrevIcon}></span>\r\n        </a>\r\n        <a\r\n          class={style.carouselControlNext}\r\n          ref={nextBtn}\r\n          onClick={() => prevHandler()}\r\n        >\r\n          <span class={style.carouselControlNextIcon}></span>\r\n        </a>\r\n\r\n        <div className={style.videos}>\r\n          {videos.length > 0\r\n            ? videos.map((v) => {\r\n                return (\r\n                  <Video\r\n                    key={v.id}\r\n                    id={v.id}\r\n                    views={v.views.length}\r\n                    image={v.image}\r\n                    username={v.user.username}\r\n                    title={v.title}\r\n                    rating={v.rating}\r\n                    photo={v.user.photo}\r\n                    createdAt={v.createdAt}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n          {/* <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video /> */}\r\n        </div>\r\n      </div>\r\n      <footer\r\n        className=\"links\"\r\n        style={{ padding: \"25px\", background: \"black\", marginTop: \"15px\" }}\r\n      >\r\n        <ul>\r\n          <li className={style1.icon}>\r\n            <img src={icon} alt=\"icon\" />\r\n          </li>\r\n          <li className={style1.iconhover}>\r\n            <img src={hover} alt=\"icon-hover\" />\r\n          </li>\r\n        </ul>\r\n        <div className={style1.iconcaption}>\r\n          <img src={caption} alt=\"icon-caption\" />\r\n        </div>\r\n      </footer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\navbar.jsx",["128"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/Logo/icon.png';\r\nimport style from '../assets/css/navbar.module.css';\r\nimport TocIcon from '@material-ui/icons/Toc';\r\n\r\nexport const Nav = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <nav className={style.navbar}>\r\n          <div className={style.toggler} onClick={() => props.openHandler()}>\r\n            <TocIcon />\r\n          </div>\r\n          <div className={`${style.brandlogo} mx-4`}>\r\n            {\" \"}\r\n            <img src={logo} alt=\"logo\" />\r\n          </div>\r\n          <div className={style.navbarlinks}>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/videoCategories\">categories</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/profile\">profile</Link>\r\n              </li>\r\n              {/* <li>\r\n                <Link to=\"#\">community</Link>\r\n              </li> */}\r\n              <li>\r\n                <Link to=\"/contact\">contact us</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/about\">about</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {\r\n            localStorage.getItem(\"token\")?  <div className={style.register}>\r\n            <span className={style.signup}>\r\n              <Link\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\")\r\n                return  window.location.href=\"/\"\r\n                }}\r\n              >\r\n                Logout\r\n              </Link>\r\n            </span>\r\n          </div> : <div className={style.register}>\r\n            <span className={style.login}>\r\n              <Link\r\n                onClick={() => {\r\n                  props.openHandler2(\"/login\");\r\n                }}\r\n              >\r\n                login\r\n              </Link>\r\n            </span>\r\n            <span className={style.line}>&#124;</span>\r\n            <span className={style.signup}>\r\n              <Link\r\n                onClick={() => {\r\n                  props.openHandler2(\"/chooseWay\");\r\n                }}\r\n              >\r\n                sign up\r\n              </Link>\r\n            </span>\r\n          </div>\r\n          }\r\n         \r\n        </nav>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\online.jsx",["129","130","131","132"],"import React, { useEffect, useRef, useState } from \"react\";\nimport style from \"../assets/css/online.module.css\";\nimport search from \"../images/online/search.png\";\nimport comment from \"../images/online/comment.png\";\nimport style1 from \"../assets/css/home.module.css\";\nimport caption from \"../images/Logo/icon-caption.png\";\nimport icon from \"../images/Logo/icon.png\";\nimport hover from \"../images/Logo/icon-hover.png\";\nimport axios from \"axios\";\nimport Spinner from \"../UI/Spinner/Spinner\";\n\nexport function Online(props) {\n  const slider = useRef();\n  const prevBtn = useRef();\n  const nextBtn = useRef();\n\n  const [counter, setCounter] = useState(1);\n  const size = 200;\n\n  const [video, setVideo] = useState({});\n  const [videos, setVideos] = useState({});\n\n  const [loading, setLoading] = useState(false);\n\n  // const [me, setMe] = useState({});\n  const [comm, setComment] = useState(\"\");\n\n  const [sear,setSearch]=useState(\"\")\n\n  useEffect(() => {\n    axios.get(`/getVideo?id=${props.match.params.id}`).then((res) => {\n      setVideo(res.data);\n\n      axios\n        .get(`/videos?limit=8&&category=${res.data.category}&&title=${sear}`)\n        .then((res) => setVideos(res.data.docs));\n    });\n  }, [props.match.params.id,loading,sear]);\n\n  useEffect(() => {\n    slider.current.style.transform = \"translateX(\" + -size * counter + \"px)\";\n  }, []);\n\n\n  const nextHandler = () => {\n    if (counter === videos.length - 5) return;\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\n    let c = counter + 1;\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\n    setCounter(c);\n  };\n  const prevHandler = () => {\n    if (counter <= 0) return;\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\n    let c = counter - 1;\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\n    setCounter(c);\n  };\n\n  let c = (\n    <div class={style.writeComment}>\n      <div class={style.commentIcon}>\n        <img src={comment} alt=\"comment-icon\" />\n      </div>\n      <div class={style.commentText}>\n        <textarea\n          placeholder=\"Write a Comment ...\"\n          onChange={(e) => {\n            setComment(e.target.value);\n          }}\n        ></textarea>\n        <button\n          class={style.postBtn}\n          onClick={() => {\n            if (comm !== \"\") {\n              setLoading(true);\n              axios\n                .post(\"/addComent\", {\n                  comment: comm,\n                  videoId: props.match.params.id,\n                })\n                .then((res) => {\n                  setLoading(false);\n                });\n            }\n          }}\n        >\n          Post\n        </button>\n      </div>\n    </div>\n  );\n\n  if (loading) c = <Spinner />;\n\n  return (\n    <section class={style.online}>\n      <div class=\"container\">\n        <div class={style.searchBox}>\n          <img class={style.searchIcon} src={search} alt=\"search-icon\" />\n          <input\n            class={style.searchTxt}\n            type=\"search\"\n            placeholder=\"type to search\"\n            onChange={(e)=>setSearch(e.target.value)}\n          />\n        </div>\n\n        <div class={style.sliderContainer}>\n          <div class={style.slider} ref={slider}>\n            {videos.length > 0\n              ? videos.map((r) => {\n                  return (\n                    <img\n                      key={r.id}\n                      id={r.id}\n                      src={r.image}\n                      alt=\"\"\n                      style={{ width: \"200px\", height: \"200px\",cursor:'pointer' }}\n                      onClick={()=>{\n                        window.location.href=`/online/${r.id}`\n                      }}\n                      \n                    />\n                  );\n                })\n              : \"\"}\n          </div>\n        </div>\n\n        <a\n          class={style.carouselControlPrev}\n          ref={prevBtn}\n          onClick={() => nextHandler()}\n        >\n          <span class={style.carouselControlPrevIcon}></span>\n        </a>\n        <a\n          class={style.carouselControlNext}\n          ref={nextBtn}\n          onClick={() => prevHandler()}\n        >\n          <span class={style.carouselControlNextIcon}></span>\n        </a>\n\n        <div class={style.video}>\n          <iframe\n            width=\"600\"\n            height=\"315\"\n            src={video.video?video.video:\"\"}\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n          ></iframe>\n        </div>\n\n        <div class={style.comments}>\n          <div class={style.title}>\n            <h3>Comments</h3>\n            <div className={style.triangleDown}></div>\n          </div>\n\n          {video.comments\n            ? video.comments.length > 0\n              ? video.comments.map((c) => {\n                  return (\n                    <div class={style.comment}>\n                      <div>\n                        <img\n                          class={style.person}\n                          src={c.user.photo}\n                          alt=\"person\"\n                          style={{\n                            borderRadius: \"50%\",\n                            width: \"150px\",\n                            height: \"150px\",\n                          }}\n                        />\n                      </div>\n                      <div class={style.commentContent}>\n                        <h6>{c.user.username}</h6>\n                        <span>{new Date(c.date).toLocaleDateString()}</span>\n                        <p>{c.comment}</p>\n\n                        <div class={style.commentFooter}></div>\n\n                        <div class={style.replay}>\n                          <textarea\n                            placeholder=\"Write a Replay ...\"\n                            id=\"replay\"\n                          ></textarea>\n                          <button class={style.postBtn}>Post</button>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              : \"\"\n            : \"\"}\n        </div>\n        {c}\n      </div>\n      <footer\n        className=\"links\"\n        style={{ padding: \"25px\", background: \"black\", marginTop: \"15px\" }}\n      >\n        <ul>\n          <li className={style1.icon}>\n            <img src={icon} alt=\"icon\" />\n          </li>\n          <li className={style1.iconhover}>\n            <img src={hover} alt=\"icon-hover\" />\n          </li>\n        </ul>\n        <div className={style1.iconcaption}>\n          <img src={caption} alt=\"icon-caption\" />\n        </div>\n      </footer>\n    </section>\n  );\n}\n\nexport default Online;\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\search.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\videoCategories.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Pages\\Profile\\Profile.js",["133","134","135","136","137","138","139","140"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport add from \"../../images/add.png\";\r\nimport line from \"../../images/svg/line.svg\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport LineChart from \"../../Components/chartjs\";\r\n\r\nfunction generateRanges(startDate, endDate) {\r\n  let current = moment(startDate, \"DD/MM/YYYY\");\r\n  const end = moment(endDate, \"DD/MM/YYYY\");\r\n  let weeks = [];\r\n  while (current < end) {\r\n    let l = current.add(7, \"days\");\r\n    weeks = [...weeks, l.format(\"YYYY-MM-DD\")];\r\n  }\r\n  return weeks;\r\n}\r\n\r\nfunction Profile(props) {\r\n  const [profile, setProfile] = useState();\r\n  const imga = useRef();\r\n  const labe = useRef();\r\n  const alert = useRef();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [loading3, setLoading3] = useState(false);\r\n\r\n  const [update, setUpdate] = useState();\r\n  const [system, setSystem] = useState();\r\n  const [dates, setDates] = useState([]);\r\n\r\n  const [current, setCurrent] = useState(\"\");\r\n\r\n  const [h, setH] = useState();\r\n  const [w, setW] = useState();\r\n\r\n  const height = useRef();\r\n  const weight = useRef();\r\n\r\n  const [weeks, setWeeks] = useState([]);\r\n  const [weekIndex, setWeekIndex] = useState(0);\r\n\r\n  const [currentWeekWeight, setCurrentWeekWeight] = useState([]);\r\n  const [currentWeekPerfectPath, setCurrentWeekPerfectPath] = useState([]);\r\n\r\n  const [trainers, setTrainers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        props.match.params.id\r\n          ? `fetch-profile?id=${props.match.params.id}`\r\n          : `fetch-profile`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setProfile(res.data.user);\r\n        setSystem(res.data.system);\r\n        let newWeeks = generateRanges(\r\n          moment(res.data.system.perfectPathes[0].date).format(\"DD/MM/YYYY\"),\r\n          moment(\r\n            res.data.system.perfectPathes[\r\n              res.data.system.perfectPathes.length - 1\r\n            ].date\r\n          ).format(\"DD/MM/YYYY\")\r\n        );\r\n        setWeeks(newWeeks);\r\n        if (weekIndex === 0) {\r\n          if (weekIndex + 1 !== newWeeks.length) {\r\n            let ws = [];\r\n            let pws = [];\r\n            res.data.user.weights.map((w) => {\r\n              if (\r\n                moment(w.date).isBetween(\r\n                  moment(newWeeks[weekIndex]),\r\n                  moment(newWeeks[weekIndex + 1])\r\n                )\r\n              ) {\r\n                ws.push(w.weight);\r\n              }\r\n            });\r\n            setCurrentWeekWeight(ws);\r\n            res.data.system.perfectPathes.map((w) => {\r\n              if (\r\n                moment(w.date).isBetween(\r\n                  moment(newWeeks[weekIndex]),\r\n                  moment(newWeeks[weekIndex + 1])\r\n                )\r\n              )\r\n                pws.push(w.weight);\r\n            });\r\n            setCurrentWeekPerfectPath(pws);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        props.match.params.id\r\n          ? `getDates?id=${props.match.params.id}`\r\n          : `getDates`\r\n      )\r\n      .then((res) => {\r\n        setDates(res.data.syst);\r\n        setCurrent(res.data.syst[0].date);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [loading, loading2, loading3, props.open2]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/getUsers?limit=3\").then((res) => {\r\n      setTrainers(res.data.docs);\r\n    });\r\n  }, []);\r\n\r\n  const leftToggle = () => {\r\n    var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n    if (indexOfStevie !== 0) {\r\n      setCurrent(dates[indexOfStevie - 1].date);\r\n      axios\r\n        .get(\r\n          props.match.params.id\r\n            ? `getSystemByDate?date=${current}&&id=${props.match.params.id}`\r\n            : `getSystemByDate?date=${current}`\r\n        )\r\n        .then((res) => {\r\n          setSystem(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const rightToggle = () => {\r\n    var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n    if (indexOfStevie !== dates.length - 1) {\r\n      setCurrent(dates[indexOfStevie + 1].date);\r\n      axios\r\n        .get(\r\n          props.match.params.id\r\n            ? `getSystemByDate?date=${current}&&id=${props.match.params.id}`\r\n            : `getSystemByDate?date=${current}`\r\n        )\r\n        .then((res) => {\r\n          setSystem(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const leftToggleChart = () => {\r\n    if (weekIndex - 1 !== -1) {\r\n      let ws = [];\r\n      let pws = [];\r\n      profile.weights.map((w) => {\r\n        if (\r\n          moment(w.date).isBetween(\r\n            moment(weeks[weekIndex - 1]),\r\n            moment(weeks[weekIndex])\r\n          )\r\n        )\r\n          ws.push(w.weight);\r\n      });\r\n      setCurrentWeekWeight(ws);\r\n      system.perfectPathes.map((w) => {\r\n        if (\r\n          moment(w.date).isBetween(\r\n            moment(weeks[weekIndex - 1]),\r\n            moment(weeks[weekIndex])\r\n          )\r\n        )\r\n          pws.push(w.weight);\r\n      });\r\n      setCurrentWeekPerfectPath(pws);\r\n      let nextWeek = weekIndex - 1;\r\n\r\n      setWeekIndex(nextWeek);\r\n    }\r\n  };\r\n\r\n  const rightToggleChart = () => {\r\n    if (weekIndex + 1 !== weeks.length) {\r\n      let ws = [];\r\n      let pws = [];\r\n      profile.weights.map((w) => {\r\n        if (\r\n          moment(w.date).isBetween(\r\n            moment(weeks[weekIndex + 1]),\r\n            moment(weeks[weekIndex + 2])\r\n          )\r\n        )\r\n          ws.push(w.weight);\r\n      });\r\n      setCurrentWeekWeight(ws);\r\n      system.perfectPathes.map((w) => {\r\n        if (\r\n          moment(w.date).isBetween(\r\n            moment(weeks[weekIndex + 1]),\r\n            moment(weeks[weekIndex + 2])\r\n          )\r\n        )\r\n          pws.push(w.weight);\r\n      });\r\n      setCurrentWeekPerfectPath(pws);\r\n      let nextWeek = weekIndex + 1;\r\n      setWeekIndex(nextWeek);\r\n    }\r\n  };\r\n\r\n  const addWeight = () => {\r\n    if (w) {\r\n      setLoading2(true);\r\n      axios\r\n        .post(`weight`, { weight: w })\r\n        .then((res) => {\r\n          weight.current.style.display = \"none\";\r\n          alert.current.style.visibility = \"visible\";\r\n          alert.current.style.opacity = \"1\";\r\n          setLoading2(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          setLoading2(false);\r\n        });\r\n    }\r\n  };\r\n  const addHeight = () => {\r\n    if (h) {\r\n      setLoading3(true);\r\n      axios\r\n        .post(`height`, { height: h })\r\n        .then((res) => {\r\n          height.current.style.display = \"none\";\r\n          alert.current.style.visibility = \"visible\";\r\n          alert.current.style.opacity = \"1\";\r\n          setLoading3(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          setLoading3(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  let updateButton = props.match.params.id ? (\r\n    \"\"\r\n  ) : (\r\n    <label\r\n      style={{\r\n        background: \"black\",\r\n        color: \"#d9a404\",\r\n        width: \"100px\",\r\n        marginRight: \"10px\",\r\n        marginBottom: \"10px\",\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      className={s.Images__update}\r\n      htmlFor=\"update\"\r\n    >\r\n      update\r\n    </label>\r\n  );\r\n\r\n  if (loading === true) {\r\n    updateButton = <Spinner />;\r\n  }\r\n\r\n  let weightComponent = (\r\n    <div>\r\n      {props.match.params.id ? (\r\n        \"\"\r\n      ) : (\r\n        <img\r\n          src={add}\r\n          alt=\"add\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => (weight.current.style.display = \"block\")}\r\n        />\r\n      )}\r\n      <span>Weight: </span>\r\n      {profile\r\n        ? profile.weights\r\n          ? profile.weights[0]\r\n            ? profile.weights[profile.weights.length - 1].weight\r\n            : \"\"\r\n          : \"\"\r\n        : \"\"}\r\n      kg\r\n      <div style={{ display: \"none\" }} ref={weight}>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => setW(e.target.value)}\r\n          style={{ height: \"30px\", padding: \"auto\", width: \"auto\" }}\r\n        />\r\n        <button\r\n          style={{\r\n            width: \"100px\",\r\n            backgroundColor: \"#181303\",\r\n            color: \"#d9a404\",\r\n            border: \"none\",\r\n            marginLeft: \"1px\",\r\n          }}\r\n          onClick={() => addWeight()}\r\n        >\r\n          Add Weight\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading3) weightComponent = <Spinner />;\r\n\r\n  let heightComponent = (\r\n    <div>\r\n      {props.match.params.id ? (\r\n        \"\"\r\n      ) : (\r\n        <img\r\n          src={add}\r\n          alt=\"add\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => (height.current.style.display = \"block\")}\r\n        />\r\n      )}\r\n      <span>height: </span>\r\n      {profile\r\n        ? profile.heights\r\n          ? profile.heights[0]\r\n            ? profile.heights[profile.heights.length - 1].height\r\n            : \"\"\r\n          : \"\"\r\n        : \"\"}\r\n      cm\r\n      <div style={{ display: \"none\" }} ref={height}>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => setH(e.target.value)}\r\n          style={{ height: \"30px\", padding: \"auto\", width: \"auto\" }}\r\n        />\r\n        <button\r\n          style={{\r\n            width: \"100px\",\r\n            backgroundColor: \"#181303\",\r\n            color: \"#d9a404\",\r\n            border: \"none\",\r\n            marginLeft: \"1px\",\r\n          }}\r\n          onClick={() => addHeight()}\r\n        >\r\n          Add Height\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading2) heightComponent = <Spinner />;\r\n\r\n  return (\r\n    <section className={s.profile}>\r\n      <div className=\"container\">\r\n        <div>\r\n          <img className={s.line} src={line} alt=\"line\" />\r\n          <div className={s.circle}>\r\n            <img\r\n              className={s.profile_img}\r\n              src={\r\n                profile\r\n                  ? profile.photo\r\n                    ? profile.photo\r\n                    : \"https://picsum.photos/220/220\"\r\n                  : \"https://picsum.photos/220/220\"\r\n              }\r\n              alt=\"profile\"\r\n              ref={imga}\r\n            />\r\n            {props.match.params.id ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <img\r\n                  className={s.add_img}\r\n                  src={add}\r\n                  alt=\"add\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <label htmlFor=\"img\" className={s.add_img} ref={labe}>\r\n                  <input\r\n                    type=\"file\"\r\n                    style={{ opacity: 0 }}\r\n                    id=\"img\"\r\n                    onChange={(event) => {\r\n                      if (event.target.files[0]) {\r\n                        const form = new FormData();\r\n                        form.append(\"photo\", event.target.files[0]);\r\n                        axios\r\n                          .patch(\"profile\", form)\r\n                          .then((res) => {})\r\n                          .catch((err) => {\r\n                            console.error(err);\r\n                          });\r\n\r\n                        var selectedFile = event.target.files[0];\r\n                        var reader = new FileReader();\r\n\r\n                        imga.current.title = selectedFile.name;\r\n                        reader.onload = function (event) {\r\n                          imga.current.src = event.target.result;\r\n                        };\r\n                        reader.readAsDataURL(selectedFile);\r\n                      }\r\n                    }}\r\n                  />\r\n                </label>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={s.info}>\r\n            <h4>\r\n              {profile ? (profile.username ? profile.username : \"\") : \"\"}{\" \"}\r\n            </h4>\r\n            <div className={s.details}>\r\n              {weightComponent}\r\n              {heightComponent}\r\n              <div>\r\n                <span>Diet Plan: </span>Intermittent Fasting\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* images section */}\r\n        <hr />\r\n        <div className={s.Images}>\r\n          <h2 className={s.Images__heading}>\r\n            {\" \"}\r\n            A comparison indicating your changes every month{\" \"}\r\n          </h2>\r\n          <div className={s.Images__info}>\r\n            <div className={s.Images__photo}>\r\n              <img\r\n                src={\r\n                  update\r\n                    ? update\r\n                    : \"https://res.cloudinary.com/derossy-backup/image/upload/v1555206304/deross-samples/placeholder-profile-male.jpg\"\r\n                }\r\n                alt=\"profile pic\"\r\n              />\r\n            </div>\r\n            <div className={s.Images__btns}>\r\n              <div className={s.Images__btns_monthes}>\r\n                {profile\r\n                  ? profile.images\r\n                    ? profile.images.length > 0\r\n                      ? profile.images.map((i, l) => {\r\n                          return (\r\n                            <button\r\n                              key={l}\r\n                              onClick={() => {\r\n                                return setUpdate(i.image);\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              month{\" \"}\r\n                              {moment(i.date)\r\n                                .locale(\"en\")\r\n                                .format(\"YYYY/MM/DD\")}{\" \"}\r\n                            </button>\r\n                          );\r\n                        })\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </div>\r\n              <input\r\n                style={{ opacity: 0 }}\r\n                type=\"file\"\r\n                id=\"update\"\r\n                onChange={(event) => {\r\n                  setLoading(true);\r\n                  if (event.target.files[0]) {\r\n                    const form = new FormData();\r\n                    form.append(\"image\", event.target.files[0]);\r\n                    axios\r\n                      .post(\"image\", form)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        alert.current.style.visibility = \"visible\";\r\n                        alert.current.style.opacity = \"1\";\r\n                      })\r\n                      .catch((err) => {\r\n                        console.error(err);\r\n                        setLoading(false);\r\n                      });\r\n                  }\r\n                }}\r\n              />\r\n              <Alert\r\n                ref={alert}\r\n                className={s.Alert}\r\n                severity=\"success\"\r\n                onClick={() => {\r\n                  alert.current.style.visibility = \"hidden\";\r\n                  alert.current.style.opacity = \"0\";\r\n                }}\r\n              >\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n\r\n              {updateButton}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {/* {system ? system.syst[0].system.map(s=>{\r\n          return ( */}\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            margin: \"10px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ cursor: \"pointer\" }} onClick={() => leftToggle()}>\r\n            {\" \"}\r\n            <ArrowBackIosIcon />\r\n          </div>\r\n          <span> {moment(current).format(\"YYYY MM DD\")} </span>\r\n          <div style={{ cursor: \"pointer\" }} onClick={() => rightToggle()}>\r\n            {\" \"}\r\n            <ArrowForwardIosIcon />\r\n          </div>\r\n        </div>\r\n        <table className={s.table}>\r\n          <thead>\r\n            <th />\r\n            <th>saturday</th>\r\n            <th>sunday</th>\r\n            <th>monday</th>\r\n            <th>tuesday</th>\r\n            <th>wednesday</th>\r\n            <th>thursday</th>\r\n            <th>friday</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>8 Am</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>11 Am</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[1],\r\n                      system.syst[0].system[4]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>3 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>5 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>7 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <hr />\r\n        <div className={s.charts}>\r\n          <h3 style={{ marginLeft: \"30px\" }}>Motivation Charts</h3>\r\n          <div id=\"calendar_basic\" className={s.chart_content} />\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              margin: \"10px 0px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => leftToggleChart()}\r\n            >\r\n              {\" \"}\r\n              <ArrowBackIosIcon />\r\n            </div>\r\n            <span>\r\n              {\" \"}\r\n              {weeks\r\n                ? weeks[weekIndex]\r\n                  ? moment(weeks[weekIndex]).format(\"YYYY/MM/DD\")\r\n                  : \"\"\r\n                : \"\"}{\" \"}\r\n            </span>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rightToggleChart()}\r\n            >\r\n              {\" \"}\r\n              <ArrowForwardIosIcon />\r\n            </div>\r\n          </div>\r\n          <LineChart\r\n            currentWeekPerfectPath={currentWeekPerfectPath}\r\n            currentWeekWeight={currentWeekWeight}\r\n            currentWeek={weeks[weekIndex]}\r\n          />\r\n        </div>\r\n        <hr />\r\n        <div className={s.cards}>\r\n          {trainers.length > 0\r\n            ? trainers.map((trainer) => {\r\n                return (\r\n                  <div className={s.card_container}>\r\n                    <div className={s.upper_container}>\r\n                      <div className={s.image_container}>\r\n                        <img src={trainer.photo} />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={s.lower_container}>\r\n                      <div>\r\n                        <h3>{trainer.username}</h3>\r\n                        <div className={s.weight}>\r\n                          <h4>\r\n                            Before:{\" \"}\r\n                            <span>\r\n                              {\" \"}\r\n                              {trainer.weights[0]\r\n                                ? trainer.weights[0].weight\r\n                                : \"begainer\"}{\" \"}\r\n                            </span>{\" \"}\r\n                            kg{\" \"}\r\n                          </h4>\r\n                          <h4>\r\n                            After:{\" \"}\r\n                            <span>\r\n                              {\" \"}\r\n                              {trainer.weights[trainer.weights.length - 1]\r\n                                ? trainer.weights[trainer.weights.length - 1]\r\n                                    .weight\r\n                                : \"begainer\"}{\" \"}\r\n                            </span>{\" \"}\r\n                            kg{\" \"}\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                      <div className={s.points}>\r\n                        🏆 Points: <span>50</span>\r\n                      </div>\r\n                      <div>\r\n                        <a href={`/profile/${trainer.id}`} className={s.btn}>\r\n                          View profile\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\chooseWay.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Spinner\\Spinner.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\foodPopup.jsx",["141","142","143"],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\verifyEmail.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\signup.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\forgetPassword.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\resetPassword.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\verify.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\login.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\chartjs.jsx",["144"],"import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = (props) => {\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  let current = props.currentWeek;\r\n\r\n  const options = {\r\n    animations: {\r\n      tension: {\r\n        duration: 5000,\r\n        easing: 'linear',\r\n        from: 1,\r\n        to: 0,\r\n        loop: true,\r\n      }\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            \r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentWeek) {\r\n      let a = [];\r\n      for (let i = 0; i < 7; i++) {\r\n        a.push(moment(current).format(\"YYYY/MM/DD\"));\r\n        current = moment(current).add(1, \"d\");\r\n      }\r\n\r\n      const d = {\r\n        labels: a,\r\n        datasets: [\r\n          {\r\n            label: \"Your Path\",\r\n            data: props.currentWeekWeight,\r\n            fill: false,\r\n            backgroundColor: \"#F20544\",\r\n            borderColor: \"#F20544\",\r\n          },\r\n          {\r\n            label: \"Perfect Path\",\r\n            data: props.currentWeekPerfectPath,\r\n            fill: false,\r\n            backgroundColor: \"black\",\r\n            borderColor: \"black\",\r\n          },\r\n        ],\r\n      };\r\n      setData(d);\r\n\r\n    }\r\n  }, [\r\n    props.currentWeekPerfectPath,\r\n    props.currentWeekWeight,\r\n    props.currentWeek,\r\n    \r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div\r\n          className=\"links\"\r\n          style={{ width: \"50%\", fontSize: \"1.2rem\", marginLeft: \"30px\" }}\r\n        >\r\n          A chart that shows you the difference between the rate of change of\r\n          your weight during a certain period of time and the normal rate that\r\n          you should follow\r\n        </div>\r\n      </div>\r\n      <Line data={data} options={options} type=\"line\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\video.jsx",["145"],"import React from \"react\";\r\nimport style from \"../assets/css/online.module.css\";\r\nimport vidIcon from \"../images/Path 20.svg\";\r\nimport star from \"../images/Path 2171.svg\";\r\n\r\nfunction video(props) {\r\n  return (\r\n    <div className={style.videos__child} onClick={()=>{\r\n      window.location.href=`/online/${props.id}`\r\n    }}>\r\n      <div className={style.videos__video}>\r\n        <div className={style.videos__image}>\r\n          <img src={props.image} alt=\"video\" className={style.videos__photo} />\r\n          <img src={vidIcon} alt=\"videoIcon\" className={style.videos__icon} />\r\n        </div>\r\n        <div className={style.videos__bio}>\r\n          <img src={props.photo} />\r\n          <div className={style.videos__about}>\r\n            <div className={style.videos__creatorName}>\r\n              <h3>{props.username}</h3>\r\n              <p>{props.createdAt}</p>\r\n            </div>\r\n\r\n            <p className={style.videos__info}>{props.title}</p>\r\n            <div className={style.videos__rating}>\r\n              <p>{props.views}</p>\r\n              <div>\r\n                {props.rating}\r\n                <img src={star} alt=\"star\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default video;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Helper\\Input\\Input.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Helper\\shared\\shared.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":40,"nodeType":"152","messageId":"153","endLine":1,"endColumn":46},{"ruleId":"150","severity":1,"message":"154","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":27},{"ruleId":"150","severity":1,"message":"155","line":1,"column":48,"nodeType":"152","messageId":"153","endLine":1,"endColumn":56},{"ruleId":"156","severity":1,"message":"157","line":109,"column":21,"nodeType":"158","endLine":109,"endColumn":33},{"ruleId":"159","severity":1,"message":"160","line":39,"column":6,"nodeType":"161","endLine":39,"endColumn":8,"suggestions":"162"},{"ruleId":"156","severity":1,"message":"163","line":90,"column":9,"nodeType":"158","endLine":94,"endColumn":10},{"ruleId":"156","severity":1,"message":"163","line":97,"column":9,"nodeType":"158","endLine":101,"endColumn":10},{"ruleId":"150","severity":1,"message":"154","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":42,"column":6,"nodeType":"161","endLine":42,"endColumn":8,"suggestions":"164"},{"ruleId":"156","severity":1,"message":"163","line":131,"column":9,"nodeType":"158","endLine":135,"endColumn":10},{"ruleId":"156","severity":1,"message":"163","line":138,"column":9,"nodeType":"158","endLine":142,"endColumn":10},{"ruleId":"165","severity":1,"message":"166","line":147,"column":11,"nodeType":"158","endLine":154,"endColumn":12},{"ruleId":"167","severity":1,"message":"168","line":78,"column":43,"nodeType":"169","messageId":"170","endLine":78,"endColumn":45},{"ruleId":"167","severity":1,"message":"168","line":89,"column":51,"nodeType":"169","messageId":"170","endLine":89,"endColumn":53},{"ruleId":"159","severity":1,"message":"171","line":119,"column":6,"nodeType":"161","endLine":119,"endColumn":48,"suggestions":"172"},{"ruleId":"167","severity":1,"message":"168","line":169,"column":31,"nodeType":"169","messageId":"170","endLine":169,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":179,"column":36,"nodeType":"169","messageId":"170","endLine":179,"endColumn":38},{"ruleId":"167","severity":1,"message":"168","line":199,"column":31,"nodeType":"169","messageId":"170","endLine":199,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":209,"column":36,"nodeType":"169","messageId":"170","endLine":209,"endColumn":38},{"ruleId":"173","severity":1,"message":"174","line":1296,"column":25,"nodeType":"158","endLine":1296,"endColumn":52},{"ruleId":"167","severity":1,"message":"168","line":23,"column":26,"nodeType":"169","messageId":"170","endLine":23,"endColumn":28},{"ruleId":"159","severity":1,"message":"175","line":25,"column":9,"nodeType":"176","endLine":26,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":89,"column":29,"nodeType":"169","messageId":"170","endLine":89,"endColumn":31},{"ruleId":"159","severity":1,"message":"177","line":38,"column":19,"nodeType":"178","endLine":38,"endColumn":46},{"ruleId":"173","severity":1,"message":"174","line":17,"column":11,"nodeType":"158","endLine":17,"endColumn":36},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'counter'. Either include it or remove the dependency array.","ArrayExpression",["181"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["182"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'weekIndex'. Either include them or remove the dependency array.",["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Assignments to the 'allCalories' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","Assignments to the 'current' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [counter]",{"range":"189","text":"190"},{"range":"191","text":"190"},"Update the dependencies array to be: [loading, loading2, loading3, props.match.params.id, props.open2, weekIndex]",{"range":"192","text":"193"},[1234,1236],"[counter]",[1345,1347],[3636,3678],"[loading, loading2, loading3, props.match.params.id, props.open2, weekIndex]"]