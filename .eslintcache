[{"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\index.js":"1","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\store\\Messgaes\\messagesReducer.js":"2","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\App.js":"3","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\store\\Messgaes\\messagesTypess.js":"4","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Table.js":"5","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\context\\auth-context.js":"6","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Admin\\Home.js":"7","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Sidebar\\Sidebar.js":"8","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Admin\\AddTrainer.js":"9","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Backdrop\\Backdrop.js":"10","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\PoPup\\PoPup.js":"11","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\allTrainees.js":"12","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Profile\\Profile\\Profile.js":"13","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\navbar.jsx":"14","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\online.jsx":"15","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\about.jsx":"16","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\videos.jsx":"17","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\contactUs.jsx":"18","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\searchTrainee.jsx":"19","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\videoCategories.jsx":"20","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\approvedTrainees.jsx":"21","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\searchTrainer.jsx":"22","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\chat.jsx":"23","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\QRCode\\qrCode.jsx":"24","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\home.jsx":"25","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Spinner\\Spinner.js":"26","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\context\\rest-context.js":"27","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\context\\alerts-context.js":"28","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Admin\\heper\\inputs.js":"29","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\chooseWay.js":"30","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\ProfileModal\\ProfileModal.js":"31","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\foodPopup.jsx":"32","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\foodTable.jsx":"33","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\forgetPassword.jsx":"34","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\login.jsx":"35","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\resetPassword.jsx":"36","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\signup.jsx":"37","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\verifyEmail.jsx":"38","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\chartjs.jsx":"39","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\verify.jsx":"40","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\video.jsx":"41","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\TraineeCard.js":"42","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\TrainerCard.js":"43","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\messaging.jsx":"44","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\contacts.jsx":"45","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Helper\\shared\\shared.js":"46","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Helper\\Input\\Input.js":"47","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\message.jsx":"48","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\contact.jsx":"49","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\firebase.js":"50"},{"size":980,"mtime":1621513678558,"results":"51","hashOfConfig":"52"},{"size":2684,"mtime":1626278969203,"results":"53","hashOfConfig":"52"},{"size":8498,"mtime":1627022199483,"results":"54","hashOfConfig":"52"},{"size":986,"mtime":1621407836701,"results":"55","hashOfConfig":"52"},{"size":8000,"mtime":1626928417610,"results":"56","hashOfConfig":"52"},{"size":125,"mtime":1612478316079,"results":"57","hashOfConfig":"52"},{"size":4986,"mtime":1627009106644,"results":"58","hashOfConfig":"52"},{"size":3925,"mtime":1626857359970,"results":"59","hashOfConfig":"52"},{"size":7451,"mtime":1627009097036,"results":"60","hashOfConfig":"52"},{"size":649,"mtime":1617066998000,"results":"61","hashOfConfig":"52"},{"size":2299,"mtime":1618631301387,"results":"62","hashOfConfig":"52"},{"size":46197,"mtime":1627008443840,"results":"63","hashOfConfig":"52"},{"size":44101,"mtime":1626925941080,"results":"64","hashOfConfig":"52"},{"size":8468,"mtime":1626856213825,"results":"65","hashOfConfig":"52"},{"size":6738,"mtime":1618439362336,"results":"66","hashOfConfig":"52"},{"size":863,"mtime":1617066998000,"results":"67","hashOfConfig":"52"},{"size":4704,"mtime":1618438301798,"results":"68","hashOfConfig":"52"},{"size":1114,"mtime":1617066998000,"results":"69","hashOfConfig":"52"},{"size":1960,"mtime":1621319923798,"results":"70","hashOfConfig":"52"},{"size":2131,"mtime":1621319923803,"results":"71","hashOfConfig":"52"},{"size":2288,"mtime":1618734450804,"results":"72","hashOfConfig":"52"},{"size":2363,"mtime":1618552571513,"results":"73","hashOfConfig":"52"},{"size":6679,"mtime":1626823950425,"results":"74","hashOfConfig":"52"},{"size":5322,"mtime":1626735664138,"results":"75","hashOfConfig":"52"},{"size":12428,"mtime":1627008443843,"results":"76","hashOfConfig":"52"},{"size":167,"mtime":1617066998000,"results":"77","hashOfConfig":"52"},{"size":106,"mtime":1611952937356,"results":"78","hashOfConfig":"52"},{"size":108,"mtime":1618553066551,"results":"79","hashOfConfig":"52"},{"size":625,"mtime":1626849678908,"results":"80","hashOfConfig":"52"},{"size":2511,"mtime":1618293859713,"results":"81","hashOfConfig":"52"},{"size":10693,"mtime":1621319923810,"results":"82","hashOfConfig":"52"},{"size":6606,"mtime":1621514561297,"results":"83","hashOfConfig":"52"},{"size":6442,"mtime":1621319923769,"results":"84","hashOfConfig":"52"},{"size":3498,"mtime":1617066998000,"results":"85","hashOfConfig":"52"},{"size":4324,"mtime":1621354134389,"results":"86","hashOfConfig":"52"},{"size":5058,"mtime":1617066998000,"results":"87","hashOfConfig":"52"},{"size":13221,"mtime":1627101039264,"results":"88","hashOfConfig":"52"},{"size":4555,"mtime":1617066998000,"results":"89","hashOfConfig":"52"},{"size":1985,"mtime":1621505708308,"results":"90","hashOfConfig":"52"},{"size":4581,"mtime":1617066998000,"results":"91","hashOfConfig":"52"},{"size":1277,"mtime":1618289119614,"results":"92","hashOfConfig":"52"},{"size":1265,"mtime":1621319923738,"results":"93","hashOfConfig":"52"},{"size":1933,"mtime":1626928430513,"results":"94","hashOfConfig":"52"},{"size":5416,"mtime":1627097572600,"results":"95","hashOfConfig":"52"},{"size":1307,"mtime":1626496250426,"results":"96","hashOfConfig":"52"},{"size":1190,"mtime":1617066998000,"results":"97","hashOfConfig":"52"},{"size":1625,"mtime":1617066998000,"results":"98","hashOfConfig":"52"},{"size":608,"mtime":1627085871352,"results":"99","hashOfConfig":"52"},{"size":1283,"mtime":1626496518834,"results":"100","hashOfConfig":"52"},{"size":439,"mtime":1627024672221,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"l31cf5",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"104"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\index.js",[],["224","225"],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\store\\Messgaes\\messagesReducer.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\App.js",["226"],"import React, { useState, useCallback, useEffect, useContext } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/home\";\r\nimport Nav from \"./Components/navbar\";\r\nimport Contact from \"./Components/contactUs\";\r\nimport About from \"./Components/about\";\r\nimport Sidebar from \"./UI/Sidebar/Sidebar\";\r\nimport Backdrop from \"./UI/Backdrop/Backdrop\";\r\nimport PoPup from \"./UI/PoPup/PoPup\";\r\nimport Profile from \"./Components/Profile/Profile/Profile\";\r\nimport Online from \"./Components/online\";\r\nimport VideoCategory from \"./Components/videoCategories\";\r\nimport Videos from \"./Components/videos\";\r\nimport SearchTrainee from \"./Components/searchTrainee\";\r\nimport SearchTrainer from \"./Components/searchTrainer\";\r\nimport Axios from \"axios\";\r\nimport AuthCont from \"./context/auth-context\";\r\nimport Table from \"./Components/Table\";\r\nimport Approved from \"./Components/approvedTrainees\";\r\nimport AdminHome from \"./Components/Admin/Home\";\r\nimport AddTrainer from \"./Components/Admin/AddTrainer\";\r\nimport Chat from \"./Components/Chat/chat\";\r\n// import { useDispatch } from \"react-redux\";\r\nimport Qr from \"./Components/QRCode/qrCode\";\r\nimport AllTrainees from \"./Components/allTrainees\";\r\nimport firebase from \"./firebase\";\r\nimport axios from \"axios\";\r\n\r\n// import myTrainees from \"./Components/trainer/myTrainees\";\r\n\r\nfunction App() {\r\n  const [open, setOpen] = useState(false);\r\n  const [u, setU] = useState(false);\r\n  const [m, setM] = useState(false);\r\n  const [outer, setOuter] = useState(false);\r\n  const [inner, setInnre] = useState(false);\r\n  const [param, setParam] = useState(false);\r\n\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [me, setMe] = useState({});\r\n\r\n  let Auth = useContext(AuthCont);\r\n\r\n  //notification\r\n  useEffect(() => {\r\n    const messaging = firebase.messaging();\r\n    messaging\r\n      .requestPermission()\r\n      .then(() => {\r\n        return messaging.getToken();\r\n      })\r\n      .then(async (token) => {\r\n        console.log(token);\r\n        const res = await axios.post(\"/subscribe\", {\r\n          token,\r\n          deviceType: \"web\",\r\n        });\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getProfile() {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        const res = await Axios.get(\"profile\");\r\n        if (res.status === 200 || 201) {\r\n          Auth.isAuth = true;\r\n          Auth.auth = res.data;\r\n          setMe(res.data);\r\n          setIsAuth(true);\r\n        }\r\n      }\r\n    }\r\n    getProfile();\r\n  }, []);\r\n\r\n  const openHandler = useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const closeHandler = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n  const [open2, setOpen2] = useState(false);\r\n\r\n  const openHandler2 = useCallback((url, method, o, i, u) => {\r\n    setOpen2(true);\r\n    setU(url);\r\n    setM(method);\r\n    if (url === \"/food\" || url === \"/table\") {\r\n      setOuter(o);\r\n      setInnre(i);\r\n      setParam(u);\r\n    }\r\n  }, []);\r\n\r\n  const [foo, setFoo] = useState();\r\n\r\n  const foodTable = (f, method) => {\r\n    setFoo(f);\r\n    setM(method);\r\n  };\r\n\r\n  const closeHandler2 = useCallback(() => {\r\n    setOpen2(false);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <BrowserRouter>\r\n        <Nav openHandler={openHandler} openHandler2={openHandler2} />\r\n        <Backdrop\r\n          open={open}\r\n          clickHandler={openHandler}\r\n          closeHandler={closeHandler}\r\n          closeHandler2={closeHandler2}\r\n        />\r\n        <Sidebar\r\n          open={open}\r\n          clickHandler={openHandler}\r\n          closeHandler={closeHandler}\r\n        />\r\n        {/* <Route exact path=\"/AdminHome\" component={AdminHome} />\r\n        <Route exact path=\"/AddTrainer\" component={AddTrainer} /> */}\r\n        <PoPup\r\n          open={open2}\r\n          url={u}\r\n          method={m}\r\n          outer={outer}\r\n          inner={inner}\r\n          param={param}\r\n          clickHandler2={openHandler2}\r\n          closeHandler={closeHandler2}\r\n          foodTable={foodTable}\r\n        />\r\n        {isAuth && me.role === \"trainee\" ? (\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/profile\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/profile/:id\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route exact path=\"/searchTrainee\" component={SearchTrainee} />\r\n            <Route exact path=\"/searchTrainer\" component={SearchTrainer} />\r\n            <Route exact path=\"/online/:id\" component={Online} />\r\n            <Route exact path=\"/videoCategories\" component={VideoCategory} />\r\n            <Route exact path=\"/Videos/:id\" component={Videos} />\r\n            <Route exact path=\"/chat\" component={Chat} />\r\n          </Switch>\r\n        ) : isAuth && me.role === \"gym\" ? (\r\n          <Switch>\r\n            <Route exact path=\"/Qr\" component={Qr} />\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/profile/:id\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route exact path=\"/searchTrainee\" component={SearchTrainee} />\r\n            <Route\r\n              exact\r\n              path=\"/allTrainees\"\r\n              render={(props) => (\r\n                <AllTrainees\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path=\"/chat\" component={Chat} />\r\n            <Route exact path=\"/approvedTrainees\" component={Approved} />\r\n            <Route exact path=\"/searchTrainer\" component={SearchTrainer} />\r\n            <Route exact path=\"/online/:id\" component={Online} />\r\n            <Route exact path=\"/videoCategories\" component={VideoCategory} />\r\n            <Route exact path=\"/Videos/:id\" component={Videos} />\r\n            {/* <Route exact path=\"/AddTrainer\" component={AddTrainer} /> */}\r\n            {/* <Route exact path=\"/AdminHome\" component={AdminHome} /> */}\r\n            <Route\r\n              exact\r\n              path=\"/addDite/:id\"\r\n              render={(props) => (\r\n                <Table\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  food={foo}\r\n                  method={m}\r\n                  id={outer}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        ) : isAuth && me.role === \"admin\" ? (\r\n          <Switch>\r\n            <Route exact path=\"/AdminHome\" component={AdminHome} />\r\n            <Route exact path=\"/AddTrainer\" component={AddTrainer} />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n            <Route exact path=\"/contact\" component={Contact} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            {/* <Route exact path=\"/AddTrainer\" component={AddTrainer} /> */}\r\n          </Switch>\r\n        )}\r\n      </BrowserRouter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\store\\Messgaes\\messagesTypess.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Table.js",["227","228","229","230","231","232","233","234"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport style from \"../assets/css/table.module.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nfunction Table(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const table = useRef();\r\n\r\n  const [loadind, setLoading] = useState(false);\r\n\r\n  const [fields1, setFields1] = useState([{ value: null, value1: null }]);\r\n\r\n  function handleChange1(i, event, l) {\r\n    const values = [...fields1];\r\n    console.log(event);\r\n    if (l === 1) {\r\n      values[i].value1 = moment(event).format(\"DD/MM/YYYY\");\r\n    } else {\r\n      values[i].value = event.target.value;\r\n    }\r\n    setFields1(values);\r\n  }\r\n\r\n  function handleAdd1() {\r\n    const values = [...fields1];\r\n    values.push({ value: null, value1: null });\r\n    setFields1(values);\r\n  }\r\n\r\n  function handleRemove1(i) {\r\n    const values = [...fields1];\r\n    values.splice(i, 1);\r\n    setFields1(values);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let l = document.getElementsByTagName(\"td\");\r\n    for (let i = 0; i < l.length; i++) {\r\n      if (l[i]) {\r\n        l[i].addEventListener(\"click\", (e) => {\r\n          props.openHandler2(\"/table\", i);\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n  //   console.log(props.food, props.method);\r\n\r\n  useEffect(() => {\r\n    let l = document.getElementsByTagName(\"td\");\r\n\r\n    let arr = [];\r\n    let ids = [];\r\n    let grams = [];\r\n    if (props.food) {\r\n      props.food.map((f) => {\r\n        arr.push(f.food);\r\n        ids.push(f._id);\r\n        grams.push(f.userGrams);\r\n      });\r\n      l[props.method].textContent = arr.join(\",\");\r\n      let food = [];\r\n      for (let i = 0; i < grams.length; i++) {\r\n        food.push({ grams: grams[i], food: ids[i] });\r\n      }\r\n      l[props.method].special_attribute = food;\r\n      //   console.log(props.method)\r\n      //   console.log(l[props.method].special_attribute)\r\n    }\r\n  }, [props.food]);\r\n\r\n  const addHandler = () => {\r\n    setLoading(true);\r\n\r\n    let system = [];\r\n    let l = document.getElementsByTagName(\"td\");\r\n    let time = document.getElementsByClassName(\"time\");\r\n    let days = document.getElementsByClassName(\"day\");\r\n    for (let i = 0; i < 7; i++) {\r\n      system[i] = new Object();\r\n      system[i][\"name\"] = days[i].textContent;\r\n      system[i][\"sys\"] = new Array();\r\n\r\n      for (let j = 0; j < 5; j++) {\r\n        system[i].sys[j] = new Object();\r\n        system[i].sys[j][\"time\"] = time[j].textContent;\r\n        system[i].sys[j][\"f\"] = new Array();\r\n        system[i].sys[j][\"f\"] = l[j * 7 + i].special_attribute;\r\n      }\r\n    }\r\n    // let path = {};\r\n    let weights = fields1.map((field) => {\r\n      return {\r\n        weight: parseFloat(field.value),\r\n        date: moment(field.value1).utc(),\r\n      };\r\n    });\r\n\r\n    weights = weights.filter((weight) => !isNaN(weight.weight));\r\n    // console.log(weights)\r\n\r\n    axios\r\n      .put(`put-system?user=${props.match.params.id}`, {\r\n        path: weights,\r\n        system: {\r\n          date: moment(startDate).utc(),\r\n          system,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        // window.location.href = `/addDite/${props.match.params.id}`;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n    // console.log(fields1)\r\n  };\r\n\r\n  let tab = (\r\n    <table class={style.table} ref={table}>\r\n      <thead>\r\n        <th />\r\n        <th className=\"day\">saturday</th>\r\n        <th className=\"day\">sunday</th>\r\n        <th className=\"day\">monday</th>\r\n        <th className=\"day\">tuesday</th>\r\n        <th className=\"day\">wednesday</th>\r\n        <th className=\"day\">thursday</th>\r\n        <th className=\"day\">friday</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th className=\"time\">8 Am</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">11 Am</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">3 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">5 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">7 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n  if (loadind) tab = <Spinner />;\r\n  return (\r\n    <div className={style.Table}>\r\n      <h2 class={style.section_title}>Creat Diet Plan</h2>\r\n\r\n      <button type=\"button\" onClick={() => handleAdd1()} className=\"add\">\r\n        +\r\n      </button>\r\n      {fields1.length > 1\r\n        ? fields1.map((field, idx) => {\r\n            if (idx !== 1) {\r\n              return (\r\n                <div\r\n                  key={`${field}-${idx}`}\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add Weight\"\r\n                    className=\"Modal__input\"\r\n                    value={field.value || \"\"}\r\n                    onChange={(e) => handleChange1(idx, e)}\r\n                    style={{ marginRight: \"3px\" }}\r\n                  />\r\n                  {/* <input\r\n                      type=\"number\"\r\n                      placeholder=\"Add Date\"\r\n                      className=\"Modal__input\"\r\n                      value={field.value1 || \"\"}\r\n                      onChange={(e) => handleChange1(idx, e, 1)}\r\n                      style={{ marginRight: \"3px\" }}\r\n                    /> */}\r\n                  <div class={style.diet_date}>\r\n                    <DatePicker\r\n                      // selected={startDate}\r\n                      value={field.value1 || \"\"}\r\n                      onChange={(e) => {\r\n                        // console.log(e)\r\n                        handleChange1(idx, e, 1);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleRemove1(idx)}\r\n                    className=\"remove\"\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              );\r\n            }\r\n          })\r\n        : \"\"}\r\n\r\n      {/* <div class={style.diet_plan}>\r\n        <label for=\"\"> diet plan </label>\r\n        <select>\r\n          <option value=\"intermittent\"> intermittent fasting</option>\r\n          <option value=\"hamada\"> hamada</option>\r\n          <option value=\"aboahmed\"> aboahmed</option>\r\n        </select>\r\n      </div> */}\r\n\r\n      <div class={style.diet_date}>\r\n        <DatePicker\r\n          selected={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n        />\r\n      </div>\r\n\r\n      {tab}\r\n      <button className={style.btn} onClick={() => addHandler()}>\r\n        add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\context\\auth-context.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Admin\\Home.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Sidebar\\Sidebar.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Admin\\AddTrainer.js",["235","236","237"],"import React, { useState, useContext } from \"react\";\r\nimport style from \"../../assets/css/admin.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport content from \"./heper/inputs\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport context from \"../../context/rest-context\";\r\nimport axios from \"axios\";\r\n\r\nimport { MapContainer, TileLayer, Marker, useMapEvents } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport Popup from \"react-leaflet-editable-popup\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\r\n\r\nimport bgImg from \"../../images/design/ground-img.png\";\r\nimport addImg from \"../../images/design/add-img.png\";\r\nimport graphImg from \"../../images/design/graph-img.png\";\r\n\r\n// \"leaflet\": \"^1.7.1\",\r\n//     \"leaflet-control-geocoder\": \"^1.13.0\",\r\n//  \"react-leaflet\": \"^3.0.5\",\r\n//     \"react-leaflet-editable-popup\": \"^2.0.3\",\r\n\r\nconst schema = yup.object().shape({\r\n  username: yup.string().required(),\r\n  about: yup.string().required(),\r\n  password: yup.string().required(),\r\n  email: yup.string().required().email(),\r\n  photo: yup.mixed().required(),\r\n  phone: yup\r\n    .number()\r\n    .required()\r\n    .test(\"len\", \"Max 11 numbers\", (val) => val.toString().length <= 11),\r\n});\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow,\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nfunction AddMarkerToClick(props) {\r\n  const obj = useContext(context);\r\n\r\n  const [markers, setMarkers] = useState();\r\n\r\n  const map = useMapEvents({\r\n    click(e) {\r\n      console.log(e);\r\n      console.log(L.Control.Geocoder);\r\n      if (L.Control.Geocoder) {\r\n        const geocoder = L.Control.Geocoder.nominatim();\r\n\r\n        console.log(\"2\");\r\n        geocoder.reverse(\r\n          e.latlng,\r\n          map.options.crs.scale(map.getZoom()),\r\n          (results) => {\r\n            obj.name = obj.name ? (results[0] ? results[0].name : \"\") : \"\";\r\n            props.clickHandler1(\r\n              results[0] ? (results[0].name ? results[0].name : \"\") : \"\",\r\n              e.latlng\r\n            );\r\n            let newMarker = e.latlng;\r\n\r\n            setMarkers(newMarker);\r\n          }\r\n        );\r\n      }\r\n    },\r\n  });\r\n\r\n  if (props.mark !== \"\" && !markers) {\r\n    setMarkers(props.mark);\r\n    // console.log(props.mark)\r\n    // console.log(markers)\r\n  }\r\n\r\n  if (props.clear && markers !== \"\") setMarkers(\"\");\r\n\r\n  return (\r\n    <>\r\n      {/* {markers.map(marker =>  */}\r\n      {markers ? (\r\n        <Marker position={markers}>\r\n          <Popup>\"\"</Popup>\r\n        </Marker>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction AddTrainer(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [mark, setMark] = useState(\"\");\r\n  const [place, setPlace] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState();\r\n  const [clear, setClear] = useState(false);\r\n  const [gender, setGender] = useState(\"male\");\r\n\r\n  const height = { height: \"30vh\", width: \"50vh\" };\r\n  const center = { lat: 51.5, lng: 0.12 };\r\n  const clickHandler1 = (data, coorinates) => {\r\n    setPlace(data);\r\n    setCoordinates(coorinates);\r\n  };\r\n\r\n  // form.append(\"address[0][sub]\", place);\r\n  // form.append(\"address[0][location][typeCo]\", \"Point\");\r\n  // form.append(\"address[0][location][coordinates][0]\", coordinates.lng);\r\n  // form.append(\"address[0][location][coordinates][1]\", coordinates.lat);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(schema) });\r\n  const onSubmit = async (data) => {\r\n\r\n    const body = data;\r\n    body['photo']= data['photo'][0]\r\n    const location = {\r\n      type: \"point\",\r\n      coordinates: [coordinates.lng, coordinates.lat],\r\n    };\r\n    body[\"location\"] = location;\r\n    body[\"gender\"] = gender;\r\n\r\n    const form=new FormData();\r\n    for (const [key,value] of Object.entries(body)) {\r\n      form.append(`${key}`,value)\r\n    }\r\n    await axios.post(\"/add-gym\", form);\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n \r\n  const goToHome = () => {\r\n    window.location.href='/AdminHome'\r\n  }\r\n  \r\n  const goToAddTrainer = () => {\r\n    window.location.href='/AddTrainer'\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n\r\n     {/* start left side  */}\r\n      <div className={style.left_side}>\r\n        <img src={bgImg} alt=\"\" className={style.ground__img}/>\r\n        <img src={addImg} alt=\"\" className={style.add__img} onClick={()=>goToAddTrainer()}/>\r\n        <img src={graphImg} alt=\"\" className={style.graph__img} onClick={()=>goToHome()}/>\r\n      </div>\r\n      {/* end letf side */}\r\n      \r\n    <section className={style.add_trainer}>\r\n        \r\n      <h1 className={style.add_title}>Add trainer</h1>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className={style.information}>\r\n        {content.inputs.map((input, key) => {\r\n          return (\r\n            <React.Fragment key={key}>\r\n              <input\r\n                name={input.name}\r\n                placeholder={input.placeholder}\r\n                type={input.type}\r\n                {...register(input.name)}\r\n                style={{\r\n                  border: errors[input.name]\r\n                    ? \"1px solid rgb(172, 50, 50)\"\r\n                    : \"\",\r\n                }}\r\n              />\r\n              <p className={style.message}>{errors[input.name]?.message}</p>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        <div style={{ width: \"50%\", zIndex: 10000, position: \"relative\" }}>\r\n          <DatePicker\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n          />\r\n        </div>\r\n\r\n        <div className={style.gender_info}>\r\n          <div> Gender </div>\r\n          <label className={style.contain}>\r\n            Male\r\n            <input\r\n              type=\"radio\"\r\n              defaultChecked=\"checked\"\r\n              name=\"radio\"\r\n              className={style.radio}\r\n              value=\"male\"\r\n              onChange={(e) => setGender(e.target.value)}\r\n            />\r\n            <span className={style.checkmark}></span>\r\n          </label>\r\n          <label className={style.contain}>\r\n            Female\r\n            <input\r\n              type=\"radio\"\r\n              name=\"radio\"\r\n              className={style.radio}\r\n              value=\"female\"\r\n              onChange={(e) => setGender(e.target.value)}\r\n            />\r\n            <span className={style.checkmark}></span>\r\n          </label>\r\n        </div>\r\n\r\n        <MapContainer style={height} center={center} zoom={8}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          <AddMarkerToClick\r\n            clickHandler1={clickHandler1}\r\n            mark={mark}\r\n            clear={clear}\r\n          />\r\n        </MapContainer>\r\n        <button type=\"submit\" className={style.addBtn}>\r\n          Add Trainer\r\n        </button>\r\n      </form>\r\n      {/* </div> */}\r\n            </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddTrainer;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Backdrop\\Backdrop.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\PoPup\\PoPup.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\allTrainees.js",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"import React, { useEffect, useState } from \"react\";\r\nimport style from \"../assets/css/allTrainees.module.css\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport LineChart from \"../Components/chartjs\";\r\n\r\nfunction generateRanges(startDate, endDate) {\r\n  let current = moment(startDate, \"DD/MM/YYYY\");\r\n  const end = moment(endDate, \"DD/MM/YYYY\");\r\n  let weeks = [];\r\n  while (current < end) {\r\n    let l = current.add(7, \"days\");\r\n    weeks = [...weeks, l.format(\"YYYY-MM-DD\")];\r\n  }\r\n  return weeks;\r\n}\r\nfunction AllTrainees(props) {\r\n  const [profile, setProfile] = useState();\r\n  const [system, setSystem] = useState();\r\n\r\n  const [trainess, setTrainees] = useState([]);\r\n\r\n  const [currentTrainee, setCurrentTrainee] = useState();\r\n\r\n  const [weeks, setWeeks] = useState([]);\r\n  const [weekIndex, setWeekIndex] = useState(0);\r\n  const [current, setCurrent] = useState(\"\");\r\n  const [dates, setDates] = useState([]);\r\n\r\n  const [currentWeekWeight, setCurrentWeekWeight] = useState([]);\r\n  const [currentWeekPerfectPath, setCurrentWeekPerfectPath] = useState([]);\r\n\r\n  const fctchUsers = async () => {\r\n    const res = await axios.get(\"/fetch-approved\");\r\n    setTrainees(res.data.docs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentTrainee) {\r\n      axios\r\n        .get(`fetch-profile?id=${currentTrainee}`)\r\n        .then((res) => {\r\n          // console.log(res);\r\n          setProfile(res.data.user);\r\n          setSystem(res.data.system);\r\n          let newWeeks = generateRanges(\r\n            moment(res.data.system.perfectPathes[0].date).format(\"DD/MM/YYYY\"),\r\n            moment(\r\n              res.data.system.perfectPathes[\r\n                res.data.system.perfectPathes.length - 1\r\n              ].date\r\n            ).format(\"DD/MM/YYYY\")\r\n          );\r\n          setWeeks(newWeeks);\r\n          if (weekIndex === 0) {\r\n            if (weekIndex + 1 !== newWeeks.length) {\r\n              let ws = [];\r\n              let pws = [];\r\n              res.data.user.weights.map((w) => {\r\n                if (\r\n                  moment(w.date).isBetween(\r\n                    moment(newWeeks[weekIndex]),\r\n                    moment(newWeeks[weekIndex + 1])\r\n                  )\r\n                ) {\r\n                  return ws.push(w.weight);\r\n                }\r\n              });\r\n              setCurrentWeekWeight(ws);\r\n              res.data.system.perfectPathes.map((w) => {\r\n                if (\r\n                  moment(w.date).isBetween(\r\n                    moment(newWeeks[weekIndex]),\r\n                    moment(newWeeks[weekIndex + 1])\r\n                  )\r\n                )\r\n                  return pws.push(w.weight);\r\n              });\r\n              setCurrentWeekPerfectPath(pws);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n\r\n      axios\r\n        .get(`getDates?id=${currentTrainee}`)\r\n        .then((res) => {\r\n          setDates(res.data.syst);\r\n          setCurrent(res.data.syst[0].date);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }, [currentTrainee]);\r\n\r\n  console.log(current);\r\n  console.log(currentTrainee);\r\n\r\n  useEffect(() => {\r\n    fctchUsers();\r\n  }, []);\r\n\r\n  console.log(profile);\r\n  const currentTraineeHandler = (id) => {\r\n    setCurrentTrainee(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slider = document.querySelector(\".inner_slider\");\r\n    const sliderImages = document.querySelectorAll(\".inner_slider img\");\r\n    const month = document.querySelector(\".month\");\r\n\r\n    const mainSlider = document.querySelector(\".main_slider\");\r\n\r\n    const leftSlider = document.querySelector(\".slider\");\r\n    const leftSliderImgs = document.querySelectorAll(\".slider img\");\r\n\r\n    //Buttons\r\n    const prevBtn = document.querySelector(\".carousel-control-prev\");\r\n    const nextBtn = document.querySelector(\".carousel-control-next\");\r\n\r\n    const backBtn = document.querySelector(\".arrow_back\");\r\n    const forwardBtn = document.querySelector(\".arrow_forward\");\r\n\r\n    const upBtn = document.querySelector(\".arrow_up\");\r\n    const downBtn = document.querySelector(\".arrow_down\");\r\n\r\n    let counter = 1;\r\n    const size = 350;\r\n\r\n    let mainCounter = 0;\r\n    const mainSize = 1000;\r\n\r\n    let leftCounter = 1;\r\n    const leftSize = 90;\r\n\r\n\r\n    nextBtn.addEventListener(\"click\", () => {\r\n      if (profile) {\r\n        if (counter == profile.images.length - 1) return;\r\n        slider.style.transition = \"transform 0.4s ease-in-out\";\r\n        counter++;\r\n        slider.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n        month.innerHTML = `${moment(profile.images[counter].date).format(\r\n          \"DD/MM/YYYY\"\r\n        )}`;\r\n      }\r\n    });\r\n\r\n    prevBtn.addEventListener(\"click\", () => {\r\n      if (counter <= 0) return;\r\n      slider.style.transition = \"transform 0.4s ease-in-out\";\r\n      counter--;\r\n      slider.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n      if (counter === 0) month.innerHTML = \"Day 1\";\r\n      month.innerHTML = `${moment(profile.images[counter].date).format(\r\n        \"DD/MM/YYYY\"\r\n      )}`;\r\n    });\r\n\r\n    forwardBtn.addEventListener(\"click\", () => {\r\n      if (mainCounter == 2) return;\r\n      mainSlider.style.transition = \"transform 0.4s ease-in-out\";\r\n      mainCounter++;\r\n      mainSlider.style.transform =\r\n        \"translateX(\" + -mainSize * mainCounter + \"px)\";\r\n    });\r\n    backBtn.addEventListener(\"click\", () => {\r\n      if (mainCounter <= 0) return;\r\n      mainSlider.style.transition = \"transform 0.4s ease-in-out\";\r\n      mainCounter--;\r\n      mainSlider.style.transform =\r\n        \"translateX(\" + -mainSize * mainCounter + \"px)\";\r\n    });\r\n\r\n    downBtn.addEventListener(\"click\", () => {\r\n      if (leftCounter == leftSliderImgs.length - 5) return;\r\n      leftSlider.style.transition = \"transform 0.4s ease-in-out\";\r\n      leftCounter++;\r\n      leftSlider.style.transform =\r\n        \"translateY(\" + -leftSize * leftCounter + \"px)\";\r\n    });\r\n\r\n    upBtn.addEventListener(\"click\", () => {\r\n      if (leftCounter <= 0) return;\r\n      leftSlider.style.transition = \"transform 0.4s ease-in-out\";\r\n      leftCounter--;\r\n      leftSlider.style.transform =\r\n      \"translateY(\" + -leftSize * leftCounter + \"px)\";\r\n    });\r\n  }, [profile]);\r\n\r\n  const leftToggle = () => {\r\n    if (system) {\r\n      var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n      if (indexOfStevie !== 0) {\r\n        axios\r\n          .get(\r\n            `getSystemByDate?date=${\r\n              dates[indexOfStevie - 1].date\r\n            }&&id=${currentTrainee}`\r\n          )\r\n          .then((res) => {\r\n            setSystem(res.data);\r\n            setCurrent(dates[indexOfStevie - 1].date);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const rightToggle = () => {\r\n    if (system) {\r\n      var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n      if (indexOfStevie !== dates.length - 1) {\r\n        axios\r\n          .get(\r\n            `getSystemByDate?date=${\r\n              dates[indexOfStevie + 1].date\r\n            }&&id=${currentTrainee}`\r\n          )\r\n          .then((res) => {\r\n            setSystem(res.data);\r\n            setCurrent(dates[indexOfStevie + 1].date);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const leftToggleChart = () => {\r\n    if (system)\r\n      if (weekIndex - 1 !== -1) {\r\n        let ws = [];\r\n        let pws = [];\r\n        profile.weights.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex - 1]),\r\n              moment(weeks[weekIndex])\r\n            )\r\n          )\r\n            ws.push(w.weight);\r\n        });\r\n        setCurrentWeekWeight(ws);\r\n        system.perfectPathes.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex - 1]),\r\n              moment(weeks[weekIndex])\r\n            )\r\n          )\r\n            pws.push(w.weight);\r\n        });\r\n        setCurrentWeekPerfectPath(pws);\r\n        let nextWeek = weekIndex - 1;\r\n\r\n        setWeekIndex(nextWeek);\r\n      }\r\n  };\r\n\r\n  const rightToggleChart = () => {\r\n    if (system)\r\n      if (weekIndex + 1 !== weeks.length) {\r\n        let ws = [];\r\n        let pws = [];\r\n        profile.weights.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex + 1]),\r\n              moment(weeks[weekIndex + 2])\r\n            )\r\n          )\r\n            ws.push(w.weight);\r\n        });\r\n        setCurrentWeekWeight(ws);\r\n        system.perfectPathes.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex + 1]),\r\n              moment(weeks[weekIndex + 2])\r\n            )\r\n          )\r\n            pws.push(w.weight);\r\n        });\r\n        setCurrentWeekPerfectPath(pws);\r\n        let nextWeek = weekIndex + 1;\r\n        setWeekIndex(nextWeek);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div className={style.body}>\r\n      <div class={style.left_side}>\r\n        <div class={style.left_slider}>\r\n          <div class={`${style.slider} slider`}>\r\n            {trainess.length > 0\r\n              ? trainess.map((user) => (\r\n                  <img\r\n                    key={user.user.id}\r\n                    src={user.user.photo}\r\n                    onClick={() => currentTraineeHandler(user.user.id)}\r\n                  />\r\n                ))\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <i class={`material-icons ${style.arrows} ${style.arrow_up} arrow_up`}>\r\n          keyboard_arrow_up\r\n        </i>\r\n        <i\r\n          class={`material-icons ${style.arrows} ${style.arrow_down} arrow_down`}\r\n        >\r\n          keyboard_arrow_down\r\n        </i>\r\n      </div>\r\n\r\n      <section class={style.comparison}>\r\n        <div class=\"container\">\r\n          <div class={style.profile}>\r\n            <img\r\n              src={\r\n                profile\r\n                  ? profile.photo\r\n                  : \"https://res.cloudinary.com/derossy-backup/image/upload/v1555206304/deross-samples/placeholder-profile-male.jpg\"\r\n              }\r\n              class={style.profile__img}\r\n            />\r\n            <h3 class={style.profile__name}>\r\n              {profile ? profile.username : \"Select user\"}\r\n            </h3>\r\n          </div>\r\n\r\n          <div class={style.outer_slider}>\r\n            <div class={`${style.main_slider} main_slider`}>\r\n              <div class={style.slide_one}>\r\n                <div class={style.slider_card}>\r\n                  <div class={`${style.inner_slider} inner_slider`}>\r\n                    {profile\r\n                      ? profile.images\r\n                        ? profile.images.map((photo, i) => (\r\n                            <div key={i}>\r\n                              <img src={photo.image} alt={photo._id} />{\" \"}\r\n                            </div>\r\n                          ))\r\n                        : \"\"\r\n                      : \"\"}\r\n                  </div>\r\n                  <div class={`${style.month} month`}>Day 1</div>\r\n                </div>\r\n                <a\r\n                  class={`${style.carousel_control_prev} carousel-control-prev`}\r\n                >\r\n                  <span class=\"carousel-control-prev-icon\"></span>\r\n                </a>\r\n                <a\r\n                  class={`${style.carousel_control_next} carousel-control-next`}\r\n                >\r\n                  <span class=\"carousel-control-next-icon\"></span>\r\n                </a>\r\n              </div>\r\n\r\n              <div class={style.slide_two}>\r\n                <div\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    margin: \"10px 0px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => leftToggle()}\r\n                  >\r\n                    {\" \"}\r\n                    <ArrowBackIosIcon />\r\n                  </div>\r\n                  <span> {moment(current).format(\"YYYY MM DD\")} </span>\r\n                  <div\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => rightToggle()}\r\n                  >\r\n                    {\" \"}\r\n                    <ArrowForwardIosIcon />\r\n                  </div>\r\n                </div>\r\n                <table className={style.table}>\r\n                  <thead>\r\n                    <th />\r\n                    <th>saturday</th>\r\n                    <th>sunday</th>\r\n                    <th>monday</th>\r\n                    <th>tuesday</th>\r\n                    <th>wednesday</th>\r\n                    <th>thursday</th>\r\n                    <th>friday</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>8 Am</td>\r\n                      <td\r\n                        data-label=\"Sat\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[0].sys[0],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[0]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[0].sys[0].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"sun\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[1].sys[0],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[1]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[1].sys[0].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"tuesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[2].sys[0],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[2]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[2].sys[0].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"wednesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[3].sys[0],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[3]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[3].sys[0].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[4].sys[0],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[4]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[4].sys[0].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[5].sys[0],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[5]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[5].sys[0].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[6].sys[0],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[6]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[6].sys[0].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>11 Am</td>\r\n                      <td\r\n                        data-label=\"Sat\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[0].sys[1],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[0]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[0].sys[1].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"sun\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[1].sys[1],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[1]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[1].sys[1].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"tuesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[2].sys[1],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[2]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[2].sys[1].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"wednesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[3].sys[1],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[3]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[3].sys[1].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[4].sys[1],\r\n                              system.syst[0].system[4]._id,\r\n                              system.syst[0].system[4]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[4].sys[1].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[5].sys[1],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[5]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[5].sys[1].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[6].sys[1],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[6]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[6].sys[1].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>3 Pm</td>\r\n                      <td\r\n                        data-label=\"Sat\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[0].sys[2],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[0]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[0].sys[2].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"sun\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[1].sys[2],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[1]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[1].sys[2].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"tuesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[2].sys[2],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[2]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[2].sys[2].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"wednesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[3].sys[2],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[3]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[3].sys[2].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[4].sys[2],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[4]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[4].sys[2].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[5].sys[2],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[5]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[5].sys[2].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[6].sys[2],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[6]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[6].sys[2].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>5 Pm</td>\r\n                      <td\r\n                        data-label=\"Sat\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[0].sys[3],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[0]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[0].sys[3].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"sun\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[1].sys[3],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[1]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[1].sys[3].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"tuesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[2].sys[3],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[2]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[2].sys[3].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"wednesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[3].sys[3],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[3]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[3].sys[3].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[4].sys[3],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[4]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[4].sys[3].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[5].sys[3],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[5]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[5].sys[3].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[6].sys[3],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[6]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[6].sys[3].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>7 Pm</td>\r\n                      <td\r\n                        data-label=\"Sat\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[0].sys[4],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[0]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[0].sys[4].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"sun\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[1].sys[4],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[1]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[1].sys[4].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"tuesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[2].sys[4],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[2]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[2].sys[4].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"wednesday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[3].sys[4],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[3]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[3].sys[4].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[4].sys[4],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[4]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[4].sys[4].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[5].sys[4],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[5]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[5].sys[4].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"friday\"\r\n                        onClick={(e) => {\r\n                          if (system)\r\n                            props.openHandler2(\r\n                              \"/food\",\r\n                              system.syst[0].system[6].sys[4],\r\n                              system.syst[0]._id,\r\n                              system.syst[0].system[6]._id,\r\n                              props.match.params.id\r\n                            );\r\n                        }}\r\n                      >\r\n                        {system\r\n                          ? system.syst[0].system[6].sys[4].f.map(\r\n                              (f) => f.food.food + \", \"\r\n                            )\r\n                          : \"\"}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                {/* <table class={style.table}>\r\n                  <thead>\r\n                    <th />\r\n                    <th>saturday</th>\r\n                    <th>sunday</th>\r\n                    <th>monday</th>\r\n                    <th>tuesday</th>\r\n                    <th>wednesday</th>\r\n                    <th>thursday</th>\r\n                    <th>friday</th>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>8 Am</td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>11 Am</td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>3 Pm</td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>5 Pm</td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>7 Pm</td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                      <td data-label></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table> */}\r\n              </div>\r\n\r\n              <div class={style.slide_three}>\r\n                <div\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    margin: \"10px 0px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => leftToggleChart()}\r\n                  >\r\n                    {\" \"}\r\n                    <ArrowBackIosIcon />\r\n                  </div>\r\n                  <span>\r\n                    {\" \"}\r\n                    {weeks\r\n                      ? weeks[weekIndex]\r\n                        ? moment(weeks[weekIndex]).format(\"YYYY/MM/DD\")\r\n                        : \"\"\r\n                      : \"\"}{\" \"}\r\n                  </span>\r\n                  <div\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => rightToggleChart()}\r\n                  >\r\n                    {\" \"}\r\n                    <ArrowForwardIosIcon />\r\n                  </div>\r\n                </div>\r\n                <LineChart\r\n                  currentWeekPerfectPath={currentWeekPerfectPath}\r\n                  currentWeekWeight={currentWeekWeight}\r\n                  currentWeek={weeks[weekIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n            <i\r\n              class={`material-icons ${style.arrow} ${style.arrow_back} arrow_back`}\r\n            >\r\n              arrow_back\r\n            </i>\r\n            <i\r\n              class={`material-icons ${style.arrow} ${style.arrow_forward} arrow_forward`}\r\n            >\r\n              arrow_forward\r\n            </i>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllTrainees;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Profile\\Profile\\Profile.js",["253","254","255","256","257","258","259","260"],"import React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport add from \"../../../images/add.png\";\r\nimport line from \"../../../images/svg/line.svg\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Spinner from \"../../../UI/Spinner/Spinner\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport LineChart from \"../../chartjs\";\r\nimport TraineeCard from \"../../TraineeCard\";\r\nimport TrainerCard from \"../../TrainerCard\";\r\nimport style2 from \"../../../assets/css/navbar.module.css\";\r\nimport AlertContext from \"../../../context/alerts-context\";\r\nimport _ from \"lodash\";\r\nimport ProfileModal from \"../../../UI/ProfileModal/ProfileModal\";\r\n// import { Line } from 'react-chartjs-2';\r\n\r\nfunction generateRanges(startDate, endDate) {\r\n  let current = moment(startDate, \"DD/MM/YYYY\");\r\n  const end = moment(endDate, \"DD/MM/YYYY\");\r\n  let weeks = [];\r\n  while (current < end) {\r\n    let l = current.add(7, \"days\");\r\n    weeks = [...weeks, l.format(\"YYYY-MM-DD\")];\r\n  }\r\n  return weeks;\r\n}\r\n\r\nfunction Profile(props) {\r\n  const [profile, setProfile] = useState();\r\n  const imga = useRef();\r\n  const labe = useRef();\r\n  const alert = useRef();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  // const [loading3, setLoading3] = useState(false);\r\n\r\n  const [update, setUpdate] = useState();\r\n  const [system, setSystem] = useState();\r\n  const [dates, setDates] = useState([]);\r\n\r\n  const [current, setCurrent] = useState(\"\");\r\n\r\n  const [weeks, setWeeks] = useState([]);\r\n  const [weekIndex, setWeekIndex] = useState(0);\r\n\r\n  const [currentWeekWeight, setCurrentWeekWeight] = useState([]);\r\n  const [currentWeekPerfectPath, setCurrentWeekPerfectPath] = useState([]);\r\n\r\n  const [trainees, setTraineees] = useState([]);\r\n  const [trainers, setTrainers] = useState([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const alers = useContext(AlertContext);\r\n\r\n  const al = _.find(\r\n    alers.alerts,\r\n    _.matchesProperty(\"user\", {\r\n      id: profile ? profile.id : \"\",\r\n      username: profile ? profile.username : \"\",\r\n      photo: profile ? profile.photo : \"\",\r\n      role: profile ? profile.role : \"\",\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        props.match.params.id\r\n          ? `fetch-profile?id=${props.match.params.id}`\r\n          : `fetch-profile`\r\n      )\r\n      .then((res) => {\r\n        setProfile(res.data.user);\r\n        setSystem(res.data.system);\r\n        let newWeeks = generateRanges(\r\n          moment(res.data.system.perfectPathes[0].date).format(\"DD/MM/YYYY\"),\r\n          moment(\r\n            res.data.system.perfectPathes[\r\n              res.data.system.perfectPathes.length - 1\r\n            ].date\r\n          ).format(\"DD/MM/YYYY\")\r\n        );\r\n        setWeeks(newWeeks);\r\n        if (weekIndex === 0) {\r\n          if (weekIndex + 1 !== newWeeks.length) {\r\n            let ws = [];\r\n            let pws = [];\r\n            res.data.user.weights.map((w) => {\r\n              if (\r\n                moment(w.date).isBetween(\r\n                  moment(newWeeks[weekIndex]),\r\n                  moment(newWeeks[weekIndex + 1])\r\n                )\r\n              ) {\r\n                return ws.push(w.weight);\r\n              }\r\n            });\r\n            setCurrentWeekWeight(ws);\r\n            res.data.system.perfectPathes.map((w) => {\r\n              if (\r\n                moment(w.date).isBetween(\r\n                  moment(newWeeks[weekIndex]),\r\n                  moment(newWeeks[weekIndex + 1])\r\n                )\r\n              )\r\n                return pws.push(w.weight);\r\n            });\r\n            setCurrentWeekPerfectPath(pws);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        props.match.params.id\r\n          ? `getDates?id=${props.match.params.id}`\r\n          : `getDates`\r\n      )\r\n      .then((res) => {\r\n        setDates(res.data.syst);\r\n        setCurrent(res.data.syst[0].date);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [loading, loading2, props.open2]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/getUsers?limit=3\").then((res) => {\r\n      setTraineees(res.data.docs);\r\n    });\r\n    axios.get(\"/get-recommendated-trainer\").then((res) => {\r\n      setTrainers([res.data.trainer]);\r\n    });\r\n  }, []);\r\n\r\n  const updateHandler = async (info) => {\r\n    //     badHabbit: \"I have a sweet tooth  \"\r\n    // energyLevel: \"I need a nap after meals\"\r\n    // goalWeight: \"80\"\r\n    // height: \"30\"\r\n    // lastIdealWeight: \"1-2 years ago\"\r\n    // sleepEveryNight: \"6-7 hours\"\r\n    // walkDaily: \"1-2 hours \"\r\n    // waterDaily: \"More than 6 glasses\"\r\n    // weight: \"40\"\r\n    // workout: \"1-2 workouts a week \"\r\n\r\n    ////axios update profile\r\n    const res = await axios.post(\"/updateInfo\", info);\r\n    console.log(res);\r\n    setLoading2(true);\r\n    setLoading2(false);\r\n  };\r\n\r\n  const leftToggle = () => {\r\n    // if (system) {\r\n      var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n      if (indexOfStevie !== 0) {\r\n        setCurrent(dates[indexOfStevie - 1].date);\r\n        axios\r\n          .get(\r\n            props.match.params.id\r\n              ? `getSystemByDate?date=${dates[indexOfStevie - 1].date}&&id=${props.match.params.id}`\r\n              : `getSystemByDate?date=${dates[indexOfStevie - 1].date}`\r\n          )\r\n          .then((res) => {\r\n            setSystem(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      }\r\n    // }\r\n  };\r\n\r\n  const rightToggle = () => {\r\n    // console.log(system)\r\n    // if (system) {\r\n      // console.log(current)\r\n      var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n      if (indexOfStevie !== dates.length - 1) {\r\n        setCurrent(dates[indexOfStevie + 1].date);\r\n        // console.log(dates[indexOfStevie + 1].date)\r\n        axios\r\n          .get(\r\n            props.match.params.id\r\n              ? `getSystemByDate?date=${dates[indexOfStevie + 1].date}&&id=${props.match.params.id}`\r\n              : `getSystemByDate?date=${dates[indexOfStevie + 1].date}`\r\n          )\r\n          .then((res) => {\r\n            // console.log(res.data)\r\n            setSystem(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      }\r\n    // }\r\n  };\r\n\r\n  const leftToggleChart = () => {\r\n    if (system)\r\n      if (weekIndex - 1 !== -1) {\r\n        let ws = [];\r\n        let pws = [];\r\n        profile.weights.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex - 1]),\r\n              moment(weeks[weekIndex])\r\n            )\r\n          )\r\n            ws.push(w.weight);\r\n        });\r\n        setCurrentWeekWeight(ws);\r\n        system.perfectPathes.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex - 1]),\r\n              moment(weeks[weekIndex])\r\n            )\r\n          )\r\n            pws.push(w.weight);\r\n        });\r\n        setCurrentWeekPerfectPath(pws);\r\n        let nextWeek = weekIndex - 1;\r\n\r\n        setWeekIndex(nextWeek);\r\n      }\r\n  };\r\n\r\n  const rightToggleChart = () => {\r\n    if (system)\r\n      if (weekIndex + 1 !== weeks.length) {\r\n        let ws = [];\r\n        let pws = [];\r\n        profile.weights.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex + 1]),\r\n              moment(weeks[weekIndex + 2])\r\n            )\r\n          )\r\n            ws.push(w.weight);\r\n        });\r\n        setCurrentWeekWeight(ws);\r\n        system.perfectPathes.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex + 1]),\r\n              moment(weeks[weekIndex + 2])\r\n            )\r\n          )\r\n            pws.push(w.weight);\r\n        });\r\n        setCurrentWeekPerfectPath(pws);\r\n        let nextWeek = weekIndex + 1;\r\n        setWeekIndex(nextWeek);\r\n      }\r\n  };\r\n\r\n  let updateButton = props.match.params.id ? (\r\n    \"\"\r\n  ) : (\r\n    <label\r\n      style={{\r\n        background: \"black\",\r\n        color: \"#d9a404\",\r\n        width: \"100px\",\r\n        marginRight: \"200px\",\r\n        marginBottom: \"10px\",\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      className={s.Images__update}\r\n      htmlFor=\"update\"\r\n    >\r\n      update\r\n    </label>\r\n  );\r\n\r\n  let weightComponent = (\r\n    <div>\r\n      <span>Weight: </span>\r\n      {profile\r\n        ? profile.weights\r\n          ? profile.weights[0]\r\n            ? profile.weights[profile.weights.length - 1].weight\r\n            : \"\"\r\n          : \"\"\r\n        : \"\"}\r\n      kg\r\n    </div>\r\n  );\r\n\r\n  let heightComponent = (\r\n    <div>\r\n      <span>height: </span>\r\n      {profile\r\n        ? profile.heights\r\n          ? profile.heights[0]\r\n            ? profile.heights[profile.heights.length - 1].height\r\n            : \"\"\r\n          : \"\"\r\n        : \"\"}\r\n      cm\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <section className={s.profile}>\r\n      <div className=\"container\">\r\n        <div>\r\n          <img className={s.line} src={line} alt=\"line\" />\r\n          <div className={s.circle}>\r\n            <img\r\n              className={s.profile_img}\r\n              src={\r\n                profile\r\n                  ? profile.photo\r\n                    ? profile.photo\r\n                    : \"https://picsum.photos/220/220\"\r\n                  : \"https://picsum.photos/220/220\"\r\n              }\r\n              alt=\"profile\"\r\n              ref={imga}\r\n            />\r\n            {props.match.params.id ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <img\r\n                  className={s.add_img}\r\n                  src={add}\r\n                  alt=\"add\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <label htmlFor=\"img\" className={s.add_img} ref={labe}>\r\n                  <input\r\n                    type=\"file\"\r\n                    style={{ opacity: 0 }}\r\n                    id=\"img\"\r\n                    onChange={(event) => {\r\n                      if (event.target.files[0]) {\r\n                        const form = new FormData();\r\n                        form.append(\"photo\", event.target.files[0]);\r\n                        axios\r\n                          .patch(\"profile\", form)\r\n                          .then((res) => {})\r\n                          .catch((err) => {\r\n                            console.error(err);\r\n                          });\r\n\r\n                        var selectedFile = event.target.files[0];\r\n                        var reader = new FileReader();\r\n\r\n                        imga.current.title = selectedFile.name;\r\n                        reader.onload = function (event) {\r\n                          imga.current.src = event.target.result;\r\n                        };\r\n                        reader.readAsDataURL(selectedFile);\r\n                      }\r\n                    }}\r\n                  />\r\n                </label>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={s.info}>\r\n            <h4>\r\n              {profile ? (profile.username ? profile.username : \"\") : \"\"}{\" \"}\r\n            </h4>\r\n            <div className={s.details}>\r\n              {weightComponent}\r\n              {heightComponent}\r\n              <div>\r\n                <span>Diet Plan: </span>Intermittent Fasting\r\n              </div>\r\n\r\n              {props.match.params.id ? (\r\n                \"\"\r\n              ) : (\r\n                <div>\r\n                  {\" \"}\r\n                  <button className={s.updateBtn} onClick={() => openModal()}>\r\n                    {\" \"}\r\n                    Update{\" \"}\r\n                  </button>{\" \"}\r\n                </div>\r\n              )}\r\n\r\n              {open && (\r\n                <ProfileModal\r\n                  updateHandler={updateHandler}\r\n                  closeModal={closeModal}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {al ? (\r\n          <div\r\n            style={{ margin: \"auto\", textAlign: \"center\", marginTop: \"-75px\" }}\r\n          >\r\n            <button\r\n              className={style2.accept}\r\n              onClick={() => {\r\n                console.log(\"here\");\r\n                setLoading(true);\r\n                axios\r\n                  .put(`approve?request=${al.id}`)\r\n                  .then((res) => {\r\n                    setLoading(false);\r\n                    console.log(res);\r\n                    window.location.href = \"/\";\r\n                  })\r\n                  .catch((err) => {\r\n                    setLoading(false);\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            >\r\n              accept\r\n            </button>\r\n            <button\r\n              className={style2.decline}\r\n              onClick={() => {\r\n                setLoading(true);\r\n                axios\r\n                  .put(`gymRefuse?request=${al.id}`)\r\n                  .then((res) => {\r\n                    setLoading(false);\r\n                    console.log(res);\r\n                    window.location.href = \"/\";\r\n                  })\r\n                  .catch((err) => {\r\n                    setLoading(false);\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            >\r\n              refuse\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* images section */}\r\n        <hr />\r\n        <div className={s.Images}>\r\n          <h2 className={s.Images__heading}>\r\n            {\" \"}\r\n            A comparison indicating your changes every month{\" \"}\r\n          </h2>\r\n          <div className={s.Images__info}>\r\n            <div className={s.Images__photo}>\r\n              <img\r\n                src={\r\n                  update\r\n                    ? update\r\n                    : \"https://res.cloudinary.com/derossy-backup/image/upload/v1555206304/deross-samples/placeholder-profile-male.jpg\"\r\n                }\r\n                alt=\"profile pic\"\r\n              />\r\n            </div>\r\n            <div className={s.Images__btns}>\r\n              <div className={s.Images__btns_monthes}>\r\n                {profile\r\n                  ? profile.images\r\n                    ? profile.images.length > 0\r\n                      ? profile.images.map((i, l) => {\r\n                          return (\r\n                            <button\r\n                              key={l}\r\n                              onClick={() => {\r\n                                return setUpdate(i.image);\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              month{\" \"}\r\n                              {moment(i.date)\r\n                                .locale(\"en\")\r\n                                .format(\"YYYY/MM/DD\")}{\" \"}\r\n                            </button>\r\n                          );\r\n                        })\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </div>\r\n              <input\r\n                style={{ opacity: 0 }}\r\n                type=\"file\"\r\n                id=\"update\"\r\n                onChange={(event) => {\r\n                  setLoading(true);\r\n                  if (event.target.files[0]) {\r\n                    const form = new FormData();\r\n                    form.append(\"image\", event.target.files[0]);\r\n                    axios\r\n                      .post(\"image\", form)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        alert.current.style.visibility = \"visible\";\r\n                        alert.current.style.opacity = \"1\";\r\n                      })\r\n                      .catch((err) => {\r\n                        console.error(err);\r\n                        setLoading(false);\r\n                      });\r\n                  }\r\n                }}\r\n              />\r\n              <Alert\r\n                ref={alert}\r\n                className={s.Alert}\r\n                severity=\"success\"\r\n                onClick={() => {\r\n                  alert.current.style.visibility = \"hidden\";\r\n                  alert.current.style.opacity = \"0\";\r\n                }}\r\n              >\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n\r\n              {updateButton}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {/* {system ? system.syst[0].system.map(s=>{\r\n          return ( */}\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            margin: \"10px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ cursor: \"pointer\" }} onClick={() => leftToggle()}>\r\n            {\" \"}\r\n            <ArrowBackIosIcon />\r\n          </div>\r\n          <span> {moment(current).format(\"YYYY MM DD\")} </span>\r\n          <div style={{ cursor: \"pointer\" }} onClick={() => rightToggle()}>\r\n            {\" \"}\r\n            <ArrowForwardIosIcon />\r\n          </div>\r\n        </div>\r\n        <table className={s.table}>\r\n          <thead>\r\n            <th />\r\n            <th>saturday</th>\r\n            <th>sunday</th>\r\n            <th>monday</th>\r\n            <th>tuesday</th>\r\n            <th>wednesday</th>\r\n            <th>thursday</th>\r\n            <th>friday</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>8 Am</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>11 Am</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[1],\r\n                      system.syst[0].system[4]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>3 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>5 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>7 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <hr />\r\n        <div className={s.charts}>\r\n          <h3 style={{ marginLeft: \"30px\" }}>Motivation Charts</h3>\r\n          <div id=\"calendar_basic\" className={s.chart_content} />\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              margin: \"10px 0px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => leftToggleChart()}\r\n            >\r\n              {\" \"}\r\n              <ArrowBackIosIcon />\r\n            </div>\r\n            <span>\r\n              {\" \"}\r\n              {weeks\r\n                ? weeks[weekIndex]\r\n                  ? moment(weeks[weekIndex]).format(\"YYYY/MM/DD\")\r\n                  : \"\"\r\n                : \"\"}{\" \"}\r\n            </span>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rightToggleChart()}\r\n            >\r\n              {\" \"}\r\n              <ArrowForwardIosIcon />\r\n            </div>\r\n          </div>\r\n          <LineChart\r\n            currentWeekPerfectPath={currentWeekPerfectPath}\r\n            currentWeekWeight={currentWeekWeight}\r\n            currentWeek={weeks[weekIndex]}\r\n          />\r\n        </div>\r\n        <hr />\r\n        <h2> Top Trending users </h2>\r\n        <div className={s.cards}>\r\n          {trainees.length > 0\r\n            ? trainees.map((trainee) => {\r\n                return (\r\n                  <TraineeCard\r\n                    photo={trainee.photo}\r\n                    username={trainee.username}\r\n                    id={trainee.id}\r\n                    key={trainee.id}\r\n                    weights={trainee.weights}\r\n                    heights={trainee.heights}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <h4 style={{ textAlign: \"right\", cursor: \"pointer\" }}>\r\n          {\" \"}\r\n          <span onClick={() => (window.location.href = \"/SearchTrainee\")}>\r\n            See More &gt;&gt;\r\n          </span>\r\n        </h4>\r\n        <hr />\r\n        <h2> Top Trending Trainers </h2>\r\n        <div className={s.cards}>\r\n          {trainers.length > 0\r\n            ? trainers.map((trainer) => {\r\n                return (\r\n                  <TrainerCard\r\n                    photo={trainer.photo}\r\n                    username={trainer.username}\r\n                    id={trainer.id}\r\n                    key={trainer.id}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <h4\r\n          style={{\r\n            textAlign: \"right\",\r\n            paddingBottom: \"20px\",\r\n            cursor: \"pointer\",\r\n            marginBottom: \"0\",\r\n          }}\r\n        >\r\n          <span onClick={() => (window.location.href = \"/SearchTrainer\")}>\r\n            {\" \"}\r\n            See More &gt;&gt;\r\n          </span>\r\n        </h4>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\navbar.jsx",["261"],"import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../images/Logo/icon.png\";\r\nimport style from \"../assets/css/navbar.module.css\";\r\nimport TocIcon from \"@material-ui/icons/Toc\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport Axios from \"axios\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport AlertContext from \"../context/alerts-context\";\r\n\r\nexport const Nav = (props) => {\r\n  const nav = useRef();\r\n\r\n  const auth = useContext(AuthContext);\r\n  const alerts = useContext(AlertContext);\r\n\r\n  const [notifications, setNotifications] = useState(0);\r\n\r\n  const [requests, setRequests] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (auth.auth.role === \"gym\")\r\n      Axios.get(\"count-requests\").then((res) => {\r\n        setNotifications(res.data);\r\n      });\r\n  }, [auth.auth.role, loading, alerts]);\r\n  useEffect(() => {\r\n    if (auth.auth.role === \"gym\")\r\n      Axios.get(\"fetch-requests\").then((res) => {\r\n        setRequests(res.data.docs);\r\n        alerts.alerts = res.data.docs;\r\n      });\r\n  }, [auth.auth.role, loading, alerts]);\r\n\r\n  let alers =\r\n    requests.length > 0\r\n      ? requests.map((request) => {\r\n          return (\r\n            <div className={style.user}>\r\n              <img\r\n                src={request.user.photo}\r\n                className={style.user__image}\r\n                onClick={() =>\r\n                  (window.location.href = `/profile/${request.user.id}`)\r\n                }\r\n              />\r\n              <div>\r\n                <div\r\n                  className={style.user__name}\r\n                  onClick={() =>\r\n                    (window.location.href = `/profile/${request.user.id}`)\r\n                  }\r\n                >\r\n                  {request.user.username}\r\n                </div>\r\n                <button\r\n                  className={style.accept}\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    Axios.put(`approve?request=${request.id}`)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        console.log(res);\r\n                      })\r\n                      .catch((err) => {\r\n                        setLoading(false);\r\n                        console.log(err);\r\n                      });\r\n                  }}\r\n                >\r\n                  Accept\r\n                </button>\r\n                <button\r\n                  className={style.decline}\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    Axios.put(`gymRefuse?request=${request.id}`)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        console.log(res);\r\n                      })\r\n                      .catch((err) => {\r\n                        setLoading(false);\r\n                        console.log(err);\r\n                      });\r\n                  }}\r\n                >\r\n                  Decline\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      : \"\";\r\n\r\n  if (loading) alers = <Spinner />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <nav className={style.navbar}>\r\n          <div className={style.toggler} onClick={() => props.openHandler()}>\r\n            <TocIcon />\r\n          </div>\r\n          <div className={`${style.brandlogo} mx-4`}>\r\n            {\" \"}\r\n            <img src={logo} alt=\"logo\" />\r\n          </div>\r\n          <div className={style.navbarlinks}>\r\n            {localStorage.getItem(\"token\") && auth.auth.role === \"trainee\" ? (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/videoCategories\">categories</Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/searchTrainer\">trainers</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainee\">Users</Link>\r\n                </li>\r\n              </ul>\r\n            ) : localStorage.getItem(\"token\") && auth.auth.role === \"gym\" ? (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/videoCategories\">categories</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/allTrainees\">My Trainees</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/approvedTrainees\">Add Diet</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainer\">trainers</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainee\">Users</Link>\r\n                </li>\r\n              </ul>\r\n            ) : (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/contact\">contact us</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/about\">about</Link>\r\n                </li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n          {localStorage.getItem(\"token\") && auth.auth.role === \"gym\" ? (\r\n            <div className={style.register}>\r\n              <span className={style.signup}>\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    nav.current.style.display === \"none\"\r\n                      ? (nav.current.style.display = \"block\")\r\n                      : (nav.current.style.display = \"none\");\r\n                  }}\r\n                >\r\n                  <NotificationsNoneIcon />\r\n                  <span className={style.count}>{notifications}</span>\r\n                </Link>\r\n                {/* add hidden class ${style.hidden} */}\r\n                <div\r\n                  className={`${style.menu} `}\r\n                  style={{ display: \"none\" }}\r\n                  ref={nav}\r\n                >\r\n                  {alers}\r\n                </div>\r\n\r\n                <Link to=\"/chat\" className={style.icons}>\r\n                  <ChatIcon />\r\n                </Link>\r\n\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"token\");\r\n                    return (window.location.href = \"/\");\r\n                  }}\r\n                >\r\n                  <ExitToAppIcon />\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          ) : localStorage.getItem(\"token\") && auth.auth.role === \"trainee\" ? (\r\n            <div className={style.register}>\r\n              <span className={style.signup}>\r\n                <Link to=\"/chat\" className={style.icons}>\r\n                  <ChatIcon />\r\n                </Link>\r\n                <Link to=\"/profile\" className={style.icons}>\r\n                  <FaceIcon />\r\n                </Link>\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"token\");\r\n                    return (window.location.href = \"/\");\r\n                  }}\r\n                >\r\n                  <ExitToAppIcon />\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className={style.register}>\r\n              <span className={style.login}>\r\n                <Link\r\n                  onClick={() => {\r\n                    props.openHandler2(\"/login\");\r\n                  }}\r\n                >\r\n                  login\r\n                </Link>\r\n              </span>\r\n              <span className={style.line}>&#124;</span>\r\n              <span className={style.signup}>\r\n                <Link\r\n                  onClick={() => {\r\n                    props.openHandler2(\"/chooseWay\");\r\n                  }}\r\n                >\r\n                  sign up\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          )}\r\n        </nav>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\online.jsx",["262","263","264","265"],"import React, { useEffect, useRef, useState } from \"react\";\nimport style from \"../assets/css/online.module.css\";\nimport search from \"../images/online/search.png\";\nimport comment from \"../images/online/comment.png\";\nimport style1 from \"../assets/css/home.module.css\";\nimport caption from \"../images/Logo/icon-caption.png\";\nimport icon from \"../images/Logo/icon.png\";\nimport hover from \"../images/Logo/icon-hover.png\";\nimport axios from \"axios\";\nimport Spinner from \"../UI/Spinner/Spinner\";\n\nexport function Online(props) {\n  const slider = useRef();\n  const prevBtn = useRef();\n  const nextBtn = useRef();\n\n  const [counter, setCounter] = useState(1);\n  const size = 200;\n\n  const [video, setVideo] = useState({});\n  const [videos, setVideos] = useState({});\n\n  const [loading, setLoading] = useState(false);\n\n  // const [me, setMe] = useState({});\n  const [comm, setComment] = useState(\"\");\n\n  const [sear,setSearch]=useState(\"\")\n\n  useEffect(() => {\n    axios.get(`/getVideo?id=${props.match.params.id}`).then((res) => {\n      setVideo(res.data);\n\n      axios\n        .get(`/videos?limit=8&&category=${res.data.category}&&title=${sear}`)\n        .then((res) => setVideos(res.data.docs));\n    });\n  }, [props.match.params.id,loading,sear]);\n\n  useEffect(() => {\n    slider.current.style.transform = \"translateX(\" + -size * counter + \"px)\";\n  }, []);\n\n\n  const nextHandler = () => {\n    if (counter === videos.length - 5) return;\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\n    let c = counter + 1;\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\n    setCounter(c);\n  };\n  const prevHandler = () => {\n    if (counter <= 0) return;\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\n    let c = counter - 1;\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\n    setCounter(c);\n  };\n\n  let c = (\n    <div class={style.writeComment}>\n      <div class={style.commentIcon}>\n        <img src={comment} alt=\"comment-icon\" />\n      </div>\n      <div class={style.commentText}>\n        <textarea\n          placeholder=\"Write a Comment ...\"\n          onChange={(e) => {\n            setComment(e.target.value);\n          }}\n        ></textarea>\n        <button\n          class={style.postBtn}\n          onClick={() => {\n            if (comm !== \"\") {\n              setLoading(true);\n              axios\n                .post(\"/addComent\", {\n                  comment: comm,\n                  videoId: props.match.params.id,\n                })\n                .then((res) => {\n                  setLoading(false);\n                });\n            }\n          }}\n        >\n          Post\n        </button>\n      </div>\n    </div>\n  );\n\n  if (loading) c = <Spinner />;\n\n  return (\n    <section class={style.online}>\n      <div class=\"container\">\n        <div class={style.searchBox}>\n          <img class={style.searchIcon} src={search} alt=\"search-icon\" />\n          <input\n            class={style.searchTxt}\n            type=\"search\"\n            placeholder=\"type to search\"\n            onChange={(e)=>setSearch(e.target.value)}\n          />\n        </div>\n\n        <div class={style.sliderContainer}>\n          <div class={style.slider} ref={slider}>\n            {videos.length > 0\n              ? videos.map((r) => {\n                  return (\n                    <img\n                      key={r.id}\n                      id={r.id}\n                      src={r.image}\n                      alt=\"\"\n                      style={{ width: \"200px\", height: \"200px\",cursor:'pointer' }}\n                      onClick={()=>{\n                        window.location.href=`/online/${r.id}`\n                      }}\n                      \n                    />\n                  );\n                })\n              : \"\"}\n          </div>\n        </div>\n\n        <a\n          class={style.carouselControlPrev}\n          ref={prevBtn}\n          onClick={() => nextHandler()}\n        >\n          <span class={style.carouselControlPrevIcon}></span>\n        </a>\n        <a\n          class={style.carouselControlNext}\n          ref={nextBtn}\n          onClick={() => prevHandler()}\n        >\n          <span class={style.carouselControlNextIcon}></span>\n        </a>\n\n        <div class={style.video}>\n          <iframe\n            width=\"900\"\n            height=\"415\"\n            src={video.video?video.video:\"\"}\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n          ></iframe>\n        </div>\n\n        <div class={style.comments}>\n          <div class={style.title}>\n            <h3>Comments</h3>\n            <div className={style.triangleDown}></div>\n          </div>\n\n          {video.comments\n            ? video.comments.length > 0\n              ? video.comments.map((c) => {\n                  return (\n                    <div class={style.comment} style={{marginLeft:'120px'}}>\n                      <div>\n                        <img\n                          class={style.person}\n                          src={c.user.photo}\n                          alt=\"person\"\n                          style={{\n                            borderRadius: \"50%\",\n                            width: \"80px\",\n                            height: \"80px\",\n                          }}\n                        />\n                      </div>\n                      <div class={style.commentContent}>\n                        <h6>{c.user.username}</h6>\n                        <span>{new Date(c.date).toLocaleDateString()}</span>\n                        <p>{c.comment}</p>\n\n                        <div class={style.commentFooter}></div>\n\n                        <div class={style.replay}>\n                          <textarea\n                            placeholder=\"Write a Replay ...\"\n                            id=\"replay\"\n                          ></textarea>\n                          <button class={style.postBtn}>Post</button>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              : \"\"\n            : \"\"}\n        </div>\n        {c}\n      </div>\n      <footer\n        className=\"links\"\n        style={{ padding: \"25px\", background: \"black\", marginTop: \"15px\" }}\n      >\n        <ul>\n          <li className={style1.icon}>\n            <img src={icon} alt=\"icon\" />\n          </li>\n          <li className={style1.iconhover}>\n            <img src={hover} alt=\"icon-hover\" />\n          </li>\n        </ul>\n        <div className={style1.iconcaption}>\n          <img src={caption} alt=\"icon-caption\" />\n        </div>\n      </footer>\n    </section>\n  );\n}\n\nexport default Online;\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\about.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\videos.jsx",["266","267","268"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport style from \"../assets/css/online.module.css\";\r\nimport style1 from \"../assets/css/home.module.css\";\r\nimport caption from \"../images/Logo/icon-caption.png\";\r\nimport icon from \"../images/Logo/icon.png\";\r\nimport hover from \"../images/Logo/icon-hover.png\";\r\n\r\nimport search from \"../images/online/search.png\";\r\nimport Video from \"./video\";\r\nimport axios from \"axios\";\r\n\r\nfunction Videos(props) {\r\n  const slider = useRef();\r\n  const prevBtn = useRef();\r\n  const nextBtn = useRef();\r\n\r\n  const [counter, setCounter] = useState(1);\r\n  const size = 200;\r\n\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const [sear,setSearch]=useState(\"\")\r\n\r\n  useEffect(() => {\r\n    // console.log(props.match.params.id)\r\n    axios\r\n      .get(\"/getRecommindations?limit=10\")\r\n      .then((res) => setRecommendations(res.data.docs));\r\n\r\n    axios\r\n      .get(`/videos?limit=8&&category=${props.match.params.id}&&title=${sear}`)\r\n      .then((res) => setVideos(res.data.docs));\r\n  }, [props.match.params.id,sear]);\r\n\r\n\r\n  useEffect(() => {\r\n    slider.current.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n  }, []);\r\n\r\n  const nextHandler = () => {\r\n    if (counter === recommendations.length - 6) return;\r\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\r\n    let c = counter + 1;\r\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\r\n    setCounter(c);\r\n  };\r\n  const prevHandler = () => {\r\n    if (counter <= 0) return;\r\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\r\n    let c = counter - 1;\r\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\r\n    setCounter(c);\r\n  };\r\n\r\n  return (\r\n    <section class={style.online}>\r\n      <div class=\"container\">\r\n        <div class={style.searchBox}>\r\n          <img class={style.searchIcon} src={search} alt=\"search-icon\" />\r\n          <input\r\n            class={style.searchTxt}\r\n            type=\"search\"\r\n            placeholder=\"type to search\"\r\n            onChange={(e)=>setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div class={style.sliderContainer}>\r\n          <div class={style.slider} ref={slider}>\r\n            {recommendations.length > 0\r\n              ? recommendations.map((r) => {\r\n                  return (\r\n                    <img\r\n                      key={r.id}\r\n                      id={r.id}\r\n                      src={r.image}\r\n                      alt=\"\"\r\n                      style={{ width: \"200px\", height: \"180px\",cursor:'pointer',marginRight:'10px' }}\r\n                      onClick={()=>{\r\n                        window.location.href=`/online/${r.id}`\r\n                      }}\r\n                    />\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n\r\n        <a\r\n          class={style.carouselControlPrev}\r\n          ref={prevBtn}\r\n          onClick={() => nextHandler()}\r\n        >\r\n          <span class={style.carouselControlPrevIcon}></span>\r\n        </a>\r\n        <a\r\n          class={style.carouselControlNext}\r\n          ref={nextBtn}\r\n          onClick={() => prevHandler()}\r\n        >\r\n          <span class={style.carouselControlNextIcon}></span>\r\n        </a>\r\n\r\n        <div className={style.videos}>\r\n          {videos.length > 0\r\n            ? videos.map((v) => {\r\n                return (\r\n                  <Video\r\n                    key={v.id}\r\n                    id={v.id}\r\n                    views={v.views.length}\r\n                    image={v.image}\r\n                    username={v.user.username}\r\n                    title={v.title}\r\n                    rating={v.rating}\r\n                    photo={v.user.photo}\r\n                    createdAt={v.createdAt}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n          {/* <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video /> */}\r\n        </div>\r\n      </div>\r\n      <footer\r\n        className=\"links\"\r\n        style={{ padding: \"25px\", background: \"black\", marginTop: \"15px\" }}\r\n      >\r\n        <ul>\r\n          <li className={style1.icon}>\r\n            <img src={icon} alt=\"icon\" />\r\n          </li>\r\n          <li className={style1.iconhover}>\r\n            <img src={hover} alt=\"icon-hover\" />\r\n          </li>\r\n        </ul>\r\n        <div className={style1.iconcaption}>\r\n          <img src={caption} alt=\"icon-caption\" />\r\n        </div>\r\n      </footer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\contactUs.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\searchTrainee.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\videoCategories.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\approvedTrainees.jsx",["269"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"../assets/css/search.module.css\";\r\nimport TraineeCard from \"./TraineeCard\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nexport function Contact() {\r\n  const [trainees, setTrainees] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [loading2, setLoading2] = useState(false);\r\n\r\n  //pagination\r\n  const [page, setPage] = useState(1);\r\n  const handleChangePage = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  ////\r\n\r\n  useEffect(() => {\r\n    setLoading2(true);\r\n\r\n    axios\r\n      .get(`/fetch-approved`)\r\n      .then((res) => {\r\n        setTrainees(res.data.docs);\r\n        setLoading2(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading2(false);\r\n        console.log(err);\r\n      });\r\n  }, [search]);\r\n\r\n  let out = (\r\n    <div className={style.cards}>\r\n      {trainees.length > 0\r\n        ? trainees.map((trainee) => {\r\n            return (\r\n              <TraineeCard\r\n                photo={trainee.user.photo}\r\n                username={trainee.user.username}\r\n                id={trainee.user.id}\r\n                key={trainee.user.id}\r\n                weights={trainee.user.weights}\r\n                heights={trainee.user.heights}\r\n                trainer={true}\r\n              />\r\n            );\r\n          })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n  if (loading2) out = <Spinner />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className={style.rating}>\r\n        <div className=\"container\">\r\n          {/* <div className={style.search}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search ...\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </div> */}\r\n          {out}\r\n        </div>\r\n        <div style={{ paddingTop: \"20px\" }}>\r\n          <Pagination\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            page={page}\r\n            onChange={handleChangePage}\r\n            count={\r\n              trainees ? (trainees.docs ? parseInt(trainees.totalPages) : 1) : 1\r\n            }\r\n          />\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\searchTrainer.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\chat.jsx",["270","271","272","273","274","275"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport chatCss from \"../../assets/css/chat.module.css\";\r\n// import photo from \"../../images/friend_1.png\";\r\nimport Contacts from \"./contacts\";\r\nimport Messaging from \"./messaging\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nfunction Chat() {\r\n  const [contacts, setContacts] = useState();\r\n  const [currentConversationMessages, setCurrentConversationMessages] =\r\n    useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [currentContact, setCurrentContact] = useState();\r\n  const [socket, setSocket] = useState();\r\n  const [conversations, setConversations] = useState({});\r\n  const [recommendations, setRecommendations] = useState([]);\r\n\r\n  const [changed, setChanged] = useState(false);\r\n\r\n  const fetchAll = useCallback(async () => {\r\n    const cons = await axios.get(\"/conversations\");\r\n\r\n    const contObj = {};\r\n    cons.data.docs.map((c) => {\r\n      return (contObj[c.id] = c);\r\n    });\r\n    setContacts(contObj);\r\n    const fullConversations = cons.data.docs.map((c) =>\r\n      axios.get(`/conversations/${c.id}/messages`)\r\n    );\r\n    const recommendedContacts = axios.get(\"/fetch-recommendations\");\r\n    const res = await Promise.all([...fullConversations, recommendedContacts]);\r\n    let conversationsResult = res.slice(0, res.length - 1);\r\n    let convObj = {};\r\n    setRecommendations(res[res.length - 1]);\r\n    conversationsResult.map(\r\n      (c) => (convObj[c.config.url.split(\"/\")[2]] = c.data)\r\n    );\r\n    setConversations(convObj);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const s = io(\"https://smartfitnessgym.herokuapp.com/chat\");\r\n    s.on(\"connect\", () => {\r\n      s.emit(\"authenticate\", { token: localStorage.getItem(\"token\") });\r\n    });\r\n    setSocket(s);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    const slider = document.querySelector(\"#slider\");\r\n    const sliderImages = document.querySelectorAll(\"#slider img\");\r\n\r\n    //Buttons\r\n    const prevBtn = document.querySelector(\"#prev\");\r\n    const nextBtn = document.querySelector(\"#next\");\r\n\r\n    let counter = 1;\r\n    const size = 100;\r\n\r\n    if (slider) {\r\n      slider.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n    }\r\n    if (nextBtn&&contacts) {\r\n      nextBtn.addEventListener(\"click\", () => {\r\n        if (counter == sliderImages.length - Object.values(contacts).length) return;\r\n        slider.style.transition = \"transform 0.4s ease-in-out\";\r\n        counter++;\r\n        slider.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n      });\r\n    }\r\n    if (prevBtn) {\r\n      prevBtn.addEventListener(\"click\", () => {\r\n        if (counter <= 0) return;\r\n        slider.style.transition = \"transform 0.4s ease-in-out\";\r\n        counter--;\r\n        slider.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n      });\r\n    }\r\n  }, [contacts && Object.values(contacts).length]);\r\n\r\n  const pageHandler = async () => {};\r\n\r\n  const currentHandler = async (con) => {\r\n    setCurrentConversationMessages(\r\n      conversations[con.id]\r\n        ? {\r\n            ...conversations[con.id],\r\n            docs: conversations[con.id].docs,\r\n          }\r\n        : {}\r\n    );\r\n    setConversations((prev) => {\r\n      return {\r\n        ...prev,\r\n        [con.id]: {\r\n          ...conversations[con.id],\r\n          docs: conversations[con.id].docs,\r\n        },\r\n      };\r\n    });\r\n    setCurrentPage(1);\r\n    setCurrentContact(con);\r\n    if (currentContact) {\r\n      const oLdConversation = await axios.get(\r\n        `/conversations/${currentContact.id}/messages`\r\n      );\r\n      setConversations((prev) => {\r\n        return {\r\n          ...prev,\r\n          [currentContact.id]: oLdConversation.data,\r\n        };\r\n      });\r\n    }\r\n  };\r\n  const changedHandler = () => {\r\n    setChanged(false);\r\n  };\r\n\r\n  const addMessage = (content) => {\r\n    socket.emit(\"message\", {\r\n      to: currentContact.users[\r\n        parseInt(currentContact.users[0].id) ===\r\n        parseInt(localStorage.getItem(\"userId\"))\r\n          ? 1\r\n          : 0\r\n      ].id, //id user\r\n      conversation: currentContact.id, //id conversation\r\n      content,\r\n    });\r\n  };\r\n\r\n  //////////contacts last message handler\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"contact\", (conversation) => {\r\n        setContacts((prev) => {\r\n          return {\r\n            ...prev,\r\n            [conversation.id]: {\r\n              ...prev[conversation.id],\r\n              lastMessage: conversation.lastMessage,\r\n            },\r\n          };\r\n        });\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* Slider */}\r\n      <div className=\"container\" style={{ paddingTop: \"90px\" }}>\r\n        <div className={chatCss.slider_container}>\r\n          <div className={chatCss.slider} id=\"slider\">\r\n            {recommendations.data\r\n              ? recommendations.data.docs\r\n                ? recommendations.data.docs.map((c) => (\r\n                    <span\r\n                      key={c.id}\r\n                      onClick={async () => {\r\n                        await axios.post(\"/create-conversation\", { to: c.id });\r\n                        fetchAll();\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <img src={c.photo} alt={c.id} />\r\n                    </span>\r\n                  ))\r\n                : \"\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n\r\n        <a\r\n          className={`carousel-control-prev ${chatCss.carousel_control_prev}`}\r\n          id=\"prev\"\r\n        >\r\n          <span className=\"carousel-control-prev-icon\"></span>\r\n        </a>\r\n        <a\r\n          className={`carousel-control-next ${chatCss.carousel_control_next}`}\r\n          id=\"next\"\r\n        >\r\n          <span className=\"carousel-control-next-icon\"></span>\r\n        </a>\r\n      </div>\r\n      {/* End Slider */}\r\n\r\n      <div className={`container ${chatCss.content}`}>\r\n        <div className=\"row no-gutters\">\r\n          <Contacts\r\n            socket={socket}\r\n            currentHandler={currentHandler}\r\n            currentContact={currentContact}\r\n            contacts={contacts ? Object.values(contacts) : []}\r\n          />\r\n          <Messaging\r\n            socket={socket}\r\n            currentContact={currentContact}\r\n            addMessage={addMessage}\r\n            currentConversation={currentConversationMessages}\r\n            changedHandler={changedHandler}\r\n            changed={changed}\r\n            currentPage={currentPage}\r\n            pageHandler={pageHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Chat);\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\QRCode\\qrCode.jsx",["276"],"import React, { useState, useEffect } from 'react';\r\nimport style from './qrCode.module.css';\r\nimport QRCode from 'qrcode';\r\nimport axios from 'axios';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\n\r\nfunction dataURLtoFile(dataurl, filename) {\r\n \r\n  var arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]), \r\n      n = bstr.length, \r\n      u8arr = new Uint8Array(n);\r\n      \r\n  while(n--){\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  \r\n  return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\n\r\n\r\n\r\nconst QRcode = () => {\r\n\r\n  const [text, setText] = useState('');\r\n  const [imageSrc, setImageSrc] = useState('');\r\n  const [imageId, setImageId] = useState('');\r\n  const [videoSrc, setVideoSrc] = useState('');\r\n  const [QrURL, setQrURL] = useState('');\r\n  let [progress, setProgress] = useState('');\r\n\r\n  const defaultBtnActive = () => {\r\n    const defaultBtn = document.getElementById(\"defaultBtn\");\r\n    defaultBtn.click();\r\n  }\r\n\r\n  const getVideoSrc = () => {\r\n\r\n    const videoEl = document.getElementById(\"video\");\r\n    const file = document.getElementById(\"defaultBtn\").files[0];\r\n    \r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload =  ()=> {\r\n        const result = reader.result;\r\n        videoEl.src = result;\r\n      }\r\n      reader.readAsDataURL(file);   \r\n    }\r\n  }\r\n\r\n  const cancelBtn = () => {\r\n    const video = document.getElementById(\"video\");\r\n    video.src = \"\";\r\n  }\r\n\r\n  const uploadVideo = () => {\r\n\r\n    const form = new FormData()\r\n    form.append('title',text)\r\n    form.append('video', videoSrc)\r\n    \r\n    axios.post(`/add-video-qr`, form, {\r\n      onUploadProgress: progressEvent => {\r\n        // console.log(`upload progress: ${Math.round(progressEvent.loaded / progressEvent.total * 100)}`)\r\n        setProgress(Math.round(progressEvent.loaded / progressEvent.total * 100))\r\n      }\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.video);\r\n        setQrURL(res.data.video)\r\n        setImageId(res.data.id)\r\n      }).catch((err) => {\r\n        console.error(err);\r\n      })\r\n    \r\n  }\r\n\r\n  const generateQRCode = async ()=> {\r\n    try {\r\n      \r\n      const response = await QRCode.toDataURL(QrURL);\r\n      setImageSrc(response);\r\n      console.log(imageSrc)\r\n\r\n      var file = dataURLtoFile(imageSrc,'hello.png');\r\n      console.log(file);\r\n\r\n      const _form = new FormData()\r\n      _form.append('image', file)\r\n      \r\n      axios.post(`/add-photo-qr?id=${imageId}`, _form)\r\n        .then((res) => {\r\n          console.log(res);\r\n        }).catch((err) => {\r\n          console.error(err);\r\n        })\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className={style.qrCode}>\r\n          <div className={style.qr__left}>\r\n\r\n            <h2 className={style.qr__title}>Create QR-Code</h2>\r\n            \r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"video name\"\r\n              className={style.qr__inputName}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"description\"\r\n              className={style.qr__inputDescription}\r\n            />\r\n\r\n            <input\r\n              type=\"file\"\r\n              id=\"defaultBtn\"\r\n              onClick={() => getVideoSrc()}\r\n              onChange={(e) => setVideoSrc(e.target.files[0])}\r\n              hidden\r\n            />\r\n            \r\n            <button\r\n              id=\"customBtn\"\r\n              className={style.qr__btn}\r\n              onClick={() => defaultBtnActive()}\r\n            > Add Video\r\n            </button>\r\n            \r\n            <div className={style.qr__videoWrapper}>\r\n              <span\r\n                className={style.qr__cancelBtn}\r\n                onClick={() => cancelBtn()}\r\n              >\r\n                &times;\r\n              </span>\r\n              \r\n              <video id=\"video\" src=\"\" controls></video>\r\n            </div>\r\n\r\n            <button\r\n              className={style.uploadBtn}\r\n              onClick={() => uploadVideo()}\r\n            > Upload Video\r\n            </button>\r\n            \r\n            <div className={style.progress}>\r\n              <ProgressBar\r\n                width=\"50%\"\r\n                bgColor=\"#D9A404\"\r\n                labelColor=\"#000\"\r\n                completed={progress}\r\n              />\r\n            </div>\r\n            \r\n          </div>\r\n\r\n          <div className={style.qr__right}>\r\n\r\n            <div className={style.qr__imageWrapper}>\r\n              {imageSrc ?\r\n                (<img id=\"img\" src={imageSrc} alt=\"QR-img\" />) :\r\n                (<p className={style.qr__noImg}> NO QR Yet!</p>)\r\n              }\r\n            </div>\r\n\r\n\r\n              <button\r\n                className={style.qr__print}\r\n                onClick={() => generateQRCode()}\r\n              >\r\n                Create\r\n              </button>\r\n\r\n              <button\r\n                className={style.qr__print}\r\n                onClick={() => window.print()}\r\n              >\r\n                Print\r\n              </button>\r\n\r\n\r\n          </div>\r\n          \r\n\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default QRcode;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\home.jsx",["277"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport style from \"../assets/css/home.module.css\";\r\nimport Star from \"../images/svg/star.svg\";\r\nimport Wave1 from \"../images/svg/wave-1.svg\";\r\nimport Wave2 from \"../images/svg/wave-2.svg\";\r\nimport QR from \"../images/svg/qr.svg\";\r\nimport gym1 from \"../images/gym-1.jpg\";\r\nimport gym2 from \"../images/gym-2.jpg\";\r\nimport gym3 from \"../images/gym-3.jpg\";\r\nimport join from \"../images/join-now.jpg\";\r\n// import doctor from \"../images/doctor.png\";\r\nimport caption from \"../images/Logo/icon-caption.png\";\r\nimport icon from \"../images/Logo/icon.png\";\r\nimport hover from \"../images/Logo/icon-hover.png\";\r\nimport Doc from \"../images/svg/doctor.svg\";\r\n\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latitude: null,\r\n      longitude: null,\r\n      nearestGyms: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"profile\")\r\n      .then((res) => {\r\n        this.setState({\r\n          user: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n    if (localStorage.getItem(\"token\")) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n        axios\r\n          .post(\"/getNearestGym\", {\r\n            coordinates: [position.coords.longitude, position.coords.latitude],\r\n          })\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            this.setState(() => ({ nearestGyms: res.data }));\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // if (this.state.user) {\r\n    //   return (\r\n    //     <div className=\"conatiner mt-5\">\r\n    //       <h2> You are login successfully </h2>\r\n    //       <h3>Welcome, {this.state.user.username}</h3>\r\n    //     </div>\r\n    //   )\r\n    // }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <section id=\"top\" onClick={() => this.props.closeHandler2()}>\r\n          <div\r\n            id=\"carouselExampleControls\"\r\n            className=\"carousel slide\"\r\n            data-bs-ride=\"carousel\"\r\n            onClick={() => this.props.closeHandler2()}\r\n          >\r\n            <div className=\"carousel-inner\">\r\n              <div className=\"carousel-item active\">\r\n                <div className={`${style.images} ${style.image1}`} />\r\n\r\n                <div className={`${style.fcaption} ${style.fade}`}>\r\n                  <h3>play your favorite workout</h3>\r\n                  <div className={style.btncontainer}>\r\n                    <button className={style.fbtn}>get in contact</button>\r\n                    <button className={style.fbtn}>learn more</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"carousel-item\">\r\n                <div className={`${style.images} ${style.image2}`} />\r\n\r\n                <div className={style.scaption}>\r\n                  <h3>Take the next step to be more fit</h3>\r\n                  <p>\r\n                    Online personal training makes it easy to fit a good workout\r\n                    into any routine. Get a small portion of the time and\r\n                    dedicate it to your health and fitness. You deserve it, and\r\n                    we can't wait to meet you.\r\n                  </p>\r\n\r\n                  <div className={style.btncontainer}>\r\n                    <button className={style.sbtn}>View Schedule</button>\r\n                    <button className={style.sbtn}>Tutorial</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"carousel-item\">\r\n                <div className={`${style.images} ${style.image3}`} />\r\n\r\n                <div className={style.tcaption}>\r\n                  <h3>Have you ever felt bored with the diet ?</h3>\r\n                  <p>\r\n                    we will suggest alternatives to you with the same number of\r\n                    calories for fruits and vegetables that you want to change\r\n                    in easy ways\r\n                  </p>\r\n                  <button className={style.tbtn}>learn more</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"carousel-item\">\r\n                <div className={`${style.images} ${style.image4}`} />\r\n\r\n                <div className={style.ftcaption}>\r\n                  <h3>Have trouble getting to the nearest gymnasium ?</h3>\r\n                  <p>\r\n                    You can find the nearest gym and set directions to go there\r\n                    using Google Maps.\r\n                  </p>\r\n                  <div className={style.link}>\r\n                    <a href=\"#\"> learn more</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <a\r\n              className={`${style[\"carousel-control-prev\"]}`}\r\n              href=\"#carouselExampleControls\"\r\n              role=\"button\"\r\n              data-bs-slide=\"prev\"\r\n            >\r\n              <span className=\"carousel-control-prev-icon\" />\r\n            </a>\r\n            <a\r\n              className={`${style[\"carousel-control-next\"]}`}\r\n              href=\"#carouselExampleControls\"\r\n              role=\"button\"\r\n              data-bs-slide=\"next\"\r\n            >\r\n              <span className=\"carousel-control-next-icon\" />\r\n            </a>\r\n          </div>\r\n        </section>\r\n\r\n        <section className={style.recommend}>\r\n          <div className=\"container\">\r\n            <div className={style.qrsection}>\r\n              <img src={QR} alt=\"qr-code\" className={style.qrimg} />\r\n              <h4>\r\n                you can scan QR-code which available on sports machines, and We\r\n                show him the correct way to perform this exercise.\r\n              </h4>\r\n            </div>\r\n            <button className={style.qrbtn}>learn more</button>\r\n            <h2>We recommend to you</h2>\r\n\r\n            <div className={style.cards}>\r\n              {this.state.nearestGyms.length > 0 ? (\r\n                this.state.nearestGyms.map((gym, i) => (          \r\n        \r\n                  <div className={style.card} key={i} >\r\n                    <img\r\n                      src={gym.photo}\r\n                      alt={gym._id}\r\n                      className={style.cardimg}\r\n                    />\r\n\r\n                    <div className={style.cardcaption}>\r\n                      <h3>{gym.username}</h3>\r\n                      <span>\r\n                        {gym.rating\r\n                          ? gym.rating > 0\r\n                            ? new Array(gym.rating)\r\n                                .fill(0)\r\n                                .map((r, i) => (\r\n                                  <img\r\n                                    key={i}\r\n                                    src={Star}\r\n                                    alt=\"stars\"\r\n                                    className={style.svg}\r\n                                  />\r\n                                ))\r\n                            : \"\"\r\n                          : \"\"}\r\n                      </span>\r\n                    </div>\r\n                    </div>\r\n                 \r\n                ))\r\n              ) : (\r\n                <>\r\n                  <div className={style.card}>\r\n                    <img src={gym1} alt=\"gym\" className={style.cardimg} />\r\n\r\n                    <div className={style.cardcaption}>\r\n                      <h3>Elsheik zayed city</h3>\r\n                      <span>\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className={style.card}>\r\n                    <img src={gym2} alt=\"gym\" className={style.cardimg} />\r\n\r\n                    <div className={style.cardcaption}>\r\n                      <h3>Elsheik zayed city</h3>\r\n                      <span>\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className={style.card}>\r\n                    <img src={gym3} alt=\"gym\" className={style.cardimg} />\r\n                    <div className={style.cardcaption}>\r\n                      <h3>Elsheik zayed city</h3>\r\n                      <span>\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                        <img src={Star} alt=\"stars\" className={style.svg} />\r\n                      </span>\r\n                    </div>\r\n                  </div>{\" \"}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <div className={style.onlinetraining}>\r\n          <div className={`container ${style.flexsection}`}>\r\n            <div className={style.textsection}>\r\n              <h2>online training</h2>\r\n              <p>\r\n                {\" \"}\r\n                Live training is the best way to make exercises at home to keep\r\n                fit and improve personal fitness and health, Since the workout\r\n                sessions aren’t done in person, you can choose to workout\r\n                anytime you like. We’re all busy. You don’t want to have to\r\n                coordinate schedules with someone who trains in a gym across\r\n                town, or rush to and from work to get to the gym. Another bonus\r\n                is that many online workouts contain a lot of bodyweight\r\n                exercises, which can be completed at home.\r\n              </p>\r\n            </div>\r\n            <div className={style.joinnow}>\r\n              <img src={join} alt=\"join now\" />\r\n              <div className={style.hover}>\r\n                <h4>just sign up </h4>\r\n                <p>\r\n                  Online training is the best way to make exercises at home to\r\n                  keep fit and improve personal fitness and health, Since the\r\n                  workout sessions aren’t done in person, you can choose to\r\n                  workout anytime you like.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={style.waveone}>\r\n          <img src={Wave1} alt=\"wave\" />\r\n        </div>\r\n        <div className={style.wavetwo}>\r\n          <img src={Wave2} alt=\"wave\" />\r\n        </div>\r\n\r\n        <div className={style.askdoctor}>\r\n          <div className=\"container\">\r\n            <img src={Doc} alt=\"doctor\" />\r\n            <div className={style.asktext}>\r\n              <h2>ask doctor</h2>\r\n              <p>\r\n                If you want to communicate with a doctor, gym trainer, or a\r\n                nutritionist you can do this , just signup and the official will\r\n                respond to you with a diet suitable for your condition\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <footer className=\"links\">\r\n          <ul>\r\n            <li className={style.icon}>\r\n              <img src={icon} alt=\"icon\" />\r\n            </li>\r\n            <li className={style.iconhover}>\r\n              <img src={hover} alt=\"icon-hover\" />\r\n            </li>\r\n          </ul>\r\n          <div className={style.iconcaption}>\r\n            <img src={caption} alt=\"icon-caption\" />\r\n          </div>\r\n          <p>\r\n            &copy;\r\n            <script>document.write(new Date().getFullYear());</script> team work\r\n            smart fitness system .\r\n          </p>\r\n          <p>\r\n            &ldquo;its going to be hard, but hard is not impossible.&rdquo;\r\n            &mdash; Project owners\r\n          </p>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\Spinner\\Spinner.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\context\\rest-context.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\context\\alerts-context.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Admin\\heper\\inputs.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\chooseWay.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\UI\\ProfileModal\\ProfileModal.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\foodPopup.jsx",["278","279","280"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport s from './Profile/Profile/Profile.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n\r\nfunction FoodPopup(props) {\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tconst [ alCalories, setAlCalories ] = useState(0);\r\n\tlet allCalories = 0;\r\n\t// console.log(props.param)\r\n\t// console.log(props.outer)\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetCalPg(0);\r\n\t\t\tsetMyIngredients([]);\r\n\t\t\tsetAlCalories(0);\r\n\t\t\tsetSearch('');\r\n\t\t},\r\n\t\t[ props.food ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tprops.food.f.map((f) => {\r\n\t\t\t\tallCalories += parseFloat(f.food.cal) / parseFloat(f.food.gram) * parseFloat(f.grams);\r\n\t\t\t});\r\n\t\t\tsetAlCalories(allCalories);\r\n\t\t},\r\n\t\t[ props.food ]\r\n\t);\r\n\r\n\tconst [ search, setSearch ] = useState();\r\n\tconst [ response, setResponse ] = useState();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\taxios\r\n\t\t\t\t.get(`search-additions?food=${search}`)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetResponse(res.data.docs);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t[ search ]\r\n\t);\r\n\r\n\tconst [ calPg, setCalPg ] = useState(0);\r\n\r\n\tconst [ myIngredients, setMyIngredients ] = useState([]);\r\n\r\n\tconst clickIngredient = (ing) => {\r\n\t\tif ([ ing, ...myIngredients ].length === new Set([ ing, ...myIngredients ]).size) {\r\n\t\t\tlet calPerGrams = 0;\r\n\t\t\ting.userGrams = 1;\r\n\t\t\tcalPerGrams = parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\t\t\tvar res = calPg + calPerGrams;\r\n\r\n\t\t\tres = parseFloat(res);\r\n\r\n\t\t\tsetMyIngredients([ ...new Set([ ing, ...myIngredients ]) ]);\r\n\r\n\t\t\tsetCalPg(res);\r\n\t\t}\r\n\t};\r\n\tconst removeIngredient = (ing) => {\r\n\t\tlet calPerGrams = 0;\r\n\t\tcalPerGrams = parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\r\n\t\tcalPerGrams = calPerGrams * ing.userGrams;\r\n\r\n\t\tif (parseFloat(calPg - calPerGrams) < 0.001) {\r\n\t\t\tsetCalPg(0);\r\n\t\t\tsetMyIngredients([]);\r\n\t\t} else {\r\n\t\t\tsetCalPg(parseFloat(calPg - calPerGrams));\r\n\r\n\t\t\tsetMyIngredients(myIngredients.filter((i) => i._id !== ing._id));\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateHandler = () => {\r\n\t\tconsole.log(alCalories , calPg);\r\n\t\tif (alCalories >= calPg) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tlet arr = [];\r\n\t\t\tmyIngredients.map((i) => {\r\n\t\t\t\tarr.push({\r\n\t\t\t\t\tfood: i._id,\r\n\t\t\t\t\tgrams: i.userGrams\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\taxios\r\n\t\t\t\t.put(`updateAdd`, {\r\n\t\t\t\t\touterSystem: props.outer,\r\n\t\t\t\t\tinnerSystem: props.inner,\r\n\t\t\t\t\tfoodId: props.food._id,\r\n\t\t\t\t\tfood: arr\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t//   setResponse(res.data.docs);\r\n\t\t\t\t\tsetCalPg(0);\r\n\t\t\t\t\tsetMyIngredients([]);\r\n\t\t\t\t\tsetAlCalories(0);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetSearch('');\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetSearch();\r\n\t\t\t\t\tsetCalPg(0);\r\n\t\t\t\t\tsetMyIngredients([]);\r\n\t\t\t\t\tsetAlCalories(0);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tlet table = (\r\n\t\t<div style={{ color: '#fff' }}>\r\n\t\t\t<input\r\n\t\t\t\tstyle={{ margin: ' 0 auto', display: 'block', color: '#fff' }}\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"Search For Food .. \"\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\treturn setSearch(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className={s.Images__btns}>\r\n\t\t\t\t<div className={s.additions}>\r\n\t\t\t\t\t{response ? (\r\n\t\t\t\t\t\tresponse.map((r) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<button style={{ position: 'relative', cursor: 'auto' }}>\r\n\t\t\t\t\t\t\t\t\t{r.food}\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\ttop: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\tright: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => clickIngredient(r)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.myFood}>\r\n\t\t\t\t<div className={s.myfood__name}>Current Food</div>\r\n\t\t\t\t<div className={s.myfood__cal}>Current Calories</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.myFood}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{props.food.f.map((f,i) => {\r\n\t\t\t\t\t\treturn <button key={i}>{f.food.food}</button>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.cal_num}>{alCalories}</div>\r\n\t\t\t\t{/* <div>{calPg}</div> */}\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<div className={s.newFood}>\r\n\t\t\t\t<div className={s.newFood__name}> New Food </div>\r\n\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{myIngredients.map((m,i) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => removeIngredient(m)}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: '1px solid',\r\n\t\t\t\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\t\t\t\tcolor: '#d9a404',\r\n\t\t\t\t\t\t\t\t\tmarginRight: '5px',\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{m.food}{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t<span style={{ margin: '0 5px' }}>{m.userGrams}</span>{' '}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '70px', height: '30px' }}\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\t\t\t\t//   value={m.userGrams}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tvar indexOfStevie = myIngredients.findIndex((i) => i._id === m._id);\r\n\t\t\t\t\t\t\t\t\t\t// console.log(indexOfStevie)\r\n\t\t\t\t\t\t\t\t\t\tlet ings = myIngredients;\r\n\t\t\t\t\t\t\t\t\t\tlet calo =\r\n\t\t\t\t\t\t\t\t\t\t\tcalPg -\r\n\t\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams *\r\n\t\t\t\t\t\t\t\t\t\t\t\t(parseFloat(m.cal).toPrecision(5) / parseFloat(m.gram).toPrecision(5));\r\n\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\tsetMyIngredients(ings);\r\n\t\t\t\t\t\t\t\t\t\tsetCalPg(\r\n\t\t\t\t\t\t\t\t\t\t\tcalo +\r\n\t\t\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(parseFloat(m.cal).toPrecision(5) /\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparseFloat(m.gram).toPrecision(5))\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}{' '}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.newFood}>\r\n\t\t\t\t<div className={s.newFood__cal}> New Calories</div>\r\n\t\t\t\t<div className={s.newFood_cal_num}>{parseFloat(calPg).toPrecision(5)}</div>\r\n\t\t\t</div>\r\n\t\t\t{props.param ? (\r\n\t\t\t\t''\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborder: '1px solid',\r\n\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\tcolor: '#d9a404',\r\n\t\t\t\t\t\tmarginRight: '5px',\r\n\t\t\t\t\t\tmarginBottom: '5px',\r\n\t\t\t\t\t\tpaddingRight: '15px',\r\n\t\t\t\t\t\tpaddingLeft: '15px',\r\n\t\t\t\t\t\tdisplay: 'block',\r\n\t\t\t\t\t\tmargin: 'auto'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => updateHandler()}\r\n\t\t\t\t>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tUpdate Item{' '}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n\r\n\tif (loading) table = <Spinner />;\r\n\r\n\treturn table;\r\n}\r\n\r\nexport default FoodPopup;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\foodTable.jsx",["281","282","283"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport s from './Profile/Profile/Profile.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n\r\nfunction FoodPopup(props) {\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tconst [ alCalories, setAlCalories ] = useState(0);\r\n\tlet allCalories = 0;\r\n\t// console.log(props.param)\r\n\t// console.log(props.outer)\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetCalPg(0);\r\n\t\t\tsetMyIngredients([]);\r\n\t\t\tsetAlCalories(0);\r\n\t\t\tsetSearch('');\r\n\t\t},\r\n\t\t[ props.food ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (props.food) {\r\n\t\t\t\tif (props.food.f) {\r\n\t\t\t\t\tprops.food.f.map((f) => {\r\n\t\t\t\t\t\tallCalories += parseFloat(f.food.cal) / parseFloat(f.food.gram) * parseFloat(f.grams);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetAlCalories(allCalories);\r\n\t\t},\r\n\t\t[ props.food ]\r\n\t);\r\n\r\n\tconst [ search, setSearch ] = useState();\r\n\tconst [ response, setResponse ] = useState();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\taxios\r\n\t\t\t\t.get(`search-additions?food=${search}`)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetResponse(res.data.docs);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t[ search ]\r\n\t);\r\n\r\n\tconst [ calPg, setCalPg ] = useState(0);\r\n\r\n\tconst [ myIngredients, setMyIngredients ] = useState([]);\r\n\r\n\tconst clickIngredient = (ing) => {\r\n\t\tif ([ ing, ...myIngredients ].length === new Set([ ing, ...myIngredients ]).size) {\r\n\t\t\tlet calPerGrams = 0;\r\n\t\t\ting.userGrams = 1;\r\n\t\t\tcalPerGrams = parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\t\t\tvar res = calPg + calPerGrams;\r\n\r\n\t\t\tres = parseFloat(res);\r\n\r\n\t\t\tsetMyIngredients([ ...new Set([ ing, ...myIngredients ]) ]);\r\n\r\n\t\t\tsetCalPg(res);\r\n\t\t}\r\n\t};\r\n\tconst removeIngredient = (ing) => {\r\n\t\tlet calPerGrams = 0;\r\n\t\tcalPerGrams = parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\r\n\t\tcalPerGrams = calPerGrams * ing.userGrams;\r\n\r\n\t\tif (parseFloat(calPg - calPerGrams) < 0.001) {\r\n\t\t\tsetCalPg(0);\r\n\t\t\tsetMyIngredients([]);\r\n\t\t} else {\r\n\t\t\tsetCalPg(parseFloat(calPg - calPerGrams));\r\n\r\n\t\t\tsetMyIngredients(myIngredients.filter((i) => i._id !== ing._id));\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateHandler = () => {\r\n\t\t// console.log(allCalories <= calPg);\r\n\t\tif (allCalories <= calPg) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tlet arr = [];\r\n\t\t\tmyIngredients.map((i) => {\r\n\t\t\t\tarr.push({\r\n\t\t\t\t\tfood: i._id,\r\n\t\t\t\t\tgrams: i.userGrams\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t// console.log(myIngredients)\r\n\t\t\tconsole.log(myIngredients);\r\n\t\t\tsetLoading(false);\r\n\t\t\t// console.log(props.method)s\r\n\t\t\tprops.foodTable(myIngredients, props.method);\r\n\t\t}\r\n\t};\r\n\t// console.log(props.food,props.method)\r\n\tlet table = (\r\n\t\t<div style={{ color: '#fff' }}>\r\n\t\t\t<input\r\n\t\t\t\tstyle={{ margin: ' 0 auto', display: 'block', color: '#fff' }}\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"Search For Food .. \"\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\treturn setSearch(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className={s.Images__btns}>\r\n\t\t\t\t<div className={s.additions}>\r\n\t\t\t\t\t{response ? (\r\n\t\t\t\t\t\tresponse.map((r) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<button style={{ position: 'relative', cursor: 'auto' }}>\r\n\t\t\t\t\t\t\t\t\t{r.food}\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\ttop: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\tright: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => clickIngredient(r)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.myFood}>\r\n\t\t\t\t<div className={s.myfood__name}>Current Food</div>\r\n\t\t\t\t<div className={s.myfood__cal}>Current Calories</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.myFood}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{props.food ? props.food.f ? (\r\n\t\t\t\t\t\tprops.food.f.map((f) => {\r\n\t\t\t\t\t\t\treturn <button>{f.food.food}</button>;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.cal_num}>{alCalories}</div>\r\n\t\t\t\t{/* <div>{calPg}</div> */}\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<div className={s.newFood}>\r\n\t\t\t\t<div className={s.newFood__name}> New Food </div>\r\n\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{myIngredients.map((m) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => removeIngredient(m)}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: '1px solid',\r\n\t\t\t\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\t\t\t\tcolor: '#d9a404',\r\n\t\t\t\t\t\t\t\t\tmarginRight: '5px',\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{m.food}{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t<span style={{ margin: '0 5px' }}>{m.userGrams}</span>{' '}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '70px', height: '30px' }}\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\t\t\t\t//   value={m.userGrams}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tvar indexOfStevie = myIngredients.findIndex((i) => i._id === m._id);\r\n\t\t\t\t\t\t\t\t\t\t// console.log(indexOfStevie)\r\n\t\t\t\t\t\t\t\t\t\tlet ings = myIngredients;\r\n\t\t\t\t\t\t\t\t\t\tlet calo =\r\n\t\t\t\t\t\t\t\t\t\t\tcalPg -\r\n\t\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams *\r\n\t\t\t\t\t\t\t\t\t\t\t\t(parseFloat(m.cal).toPrecision(5) / parseFloat(m.gram).toPrecision(5));\r\n\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\tsetMyIngredients(ings);\r\n\t\t\t\t\t\t\t\t\t\tsetCalPg(\r\n\t\t\t\t\t\t\t\t\t\t\tcalo +\r\n\t\t\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(parseFloat(m.cal).toPrecision(5) /\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparseFloat(m.gram).toPrecision(5))\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}{' '}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.newFood}>\r\n\t\t\t\t<div className={s.newFood__cal}> New Calories</div>\r\n\t\t\t\t<div className={s.newFood_cal_num}>{parseFloat(calPg).toPrecision(5)}</div>\r\n\t\t\t</div>\r\n\t\t\t{props.param ? (\r\n\t\t\t\t''\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborder: '1px solid',\r\n\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\tcolor: '#d9a404',\r\n\t\t\t\t\t\tmarginRight: '5px',\r\n\t\t\t\t\t\tmarginBottom: '5px',\r\n\t\t\t\t\t\tpaddingRight: '15px',\r\n\t\t\t\t\t\tpaddingLeft: '15px',\r\n\t\t\t\t\t\tdisplay: 'block',\r\n\t\t\t\t\t\tmargin: 'auto'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => updateHandler()}\r\n\t\t\t\t>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tUpdate Item{' '}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n\r\n\tif (loading) table = <Spinner />;\r\n\r\n\treturn table;\r\n}\r\n\r\nexport default FoodPopup;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\forgetPassword.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\login.jsx",["284"],"import React, { Component, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"../../assets/css/authentication/login.module.css\";\r\nimport logo from \"../../images/Logo/pinkLogo.png\";\r\nimport Input from \"../../Helper/Input/Input\";\r\nimport { updatedObject, checkValidity } from \"../../Helper/shared/shared\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nexport function Login(props) {\r\n  const Auth = useContext(AuthContext);\r\n\r\n  const [controls, setControls] = useState({\r\n    password: {\r\n      value: \"\",\r\n      valid: false,\r\n      validation: {\r\n        required: true,\r\n        minLength: 4,\r\n      },\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"password\",\r\n        placeholder: \"Password\",\r\n      },\r\n      touched: false,\r\n    },\r\n\r\n    phone: {\r\n      value: \"\",\r\n      valid: false,\r\n      validation: {\r\n        required: true,\r\n        isPhone: true,\r\n      },\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Phone\",\r\n        id: \"phone\",\r\n      },\r\n      touched: false,\r\n    },\r\n  });\r\n\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(null);\r\n\r\n\r\n\r\n  const on = (event, elementName) => {\r\n    const updated = updatedObject(controls, {\r\n      [elementName]: updatedObject(controls[elementName], {\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          controls[elementName].validation\r\n        ),\r\n        value: event.target.value,\r\n        touched: true,\r\n      }),\r\n    });\r\n    setControls(updated);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (controls.password.valid && controls.phone.valid) {\r\n      // this.setState({ loading: true, error: null });\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      let p = \"+2\";\r\n      let phone = p.concat(controls.phone.value);\r\n\r\n      const data = {\r\n        phone: phone,\r\n        password: controls.password.value,\r\n      };\r\n\r\n      axios({\r\n        url: \"login-phone\",\r\n        method: \"POST\",\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          localStorage.setItem(\"userId\", res.data.user.id);\r\n          window.location.href = \"/\";\r\n          setLoading(false);\r\n          Auth.isAuth = true;\r\n          Auth.auth = res.data;\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          setError(err.response.data.message);\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  let body = (\r\n    <React.Fragment>\r\n      {error ? <p className={style.Error}> {error} </p> : \"\"}\r\n      <div className={style.login}>\r\n        <form onSubmit={submitHandler}>\r\n          <div>\r\n            <img src={logo} alt=\"logo-icon\" className={style.logo} />\r\n          </div>\r\n\r\n          <div className={style.input}>\r\n            <Input\r\n              inValid={!controls.phone.valid}\r\n              changed={(e) => on(e, \"phone\")}\r\n              value={controls.phone.value}\r\n              elementType={controls.phone.elementType}\r\n              hasValidity\r\n              touched={controls.phone.touched}\r\n              elementConfig={controls.phone.elementConfig}\r\n              class={style.inp}\r\n            />\r\n          </div>\r\n\r\n          <div className={style.input}>\r\n            <Input\r\n              inValid={!controls.password.valid}\r\n              changed={(e) => on(e, \"password\")}\r\n              value={controls.password.value}\r\n              elementType={controls.password.elementType}\r\n              hasValidity\r\n              touched={controls.password.touched}\r\n              elementConfig={controls.password.elementConfig}\r\n              class={style.inp}\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className={style.btn}>\r\n            Login\r\n          </button>\r\n\r\n          <div className={style.anchor}>\r\n            <Link onClick={() => props.openHandler2(\"/forget\")}>\r\n              {\" \"}\r\n              forget password\r\n            </Link>\r\n          </div>\r\n          <hr />\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  if (loading) body = <Spinner />;\r\n  return body;\r\n}\r\n\r\nexport default Login;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\resetPassword.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\signup.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\verifyEmail.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\chartjs.jsx",["285"],"import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = (props) => {\r\n  const [data, setData] = useState({});\r\n\r\n  let current = props.currentWeek;\r\n\r\n  const options = {\r\n    animations: {\r\n      tension: {\r\n        duration: 5000,\r\n        easing: \"linear\",\r\n        from: 1,\r\n        to: 0,\r\n        loop: true,\r\n      },\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentWeek) {\r\n      let a = [];\r\n      for (let i = 0; i < 7; i++) {\r\n        a.push(moment(current).format(\"YYYY/MM/DD\"));\r\n        current = moment(current).add(1, \"d\");\r\n      }\r\n\r\n      const d = {\r\n        labels: a,\r\n        datasets: [\r\n          {\r\n            label: \"Your Path\",\r\n            data: props.currentWeekWeight,\r\n            fill: false,\r\n            backgroundColor: \"#F20544\",\r\n            borderColor: \"#F20544\",\r\n          },\r\n          {\r\n            label: \"Perfect Path\",\r\n            data: props.currentWeekPerfectPath,\r\n            fill: false,\r\n            backgroundColor: \"black\",\r\n            borderColor: \"black\",\r\n          },\r\n        ],\r\n      };\r\n      setData(d);\r\n    }\r\n  }, [\r\n    props.currentWeekPerfectPath,\r\n    props.currentWeekWeight,\r\n    props.currentWeek,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        {!props.param && (\r\n          <div\r\n            className=\"links\"\r\n            style={{ width: \"50%\", fontSize: \"1.2rem\", marginLeft: \"30px\" }}\r\n          >\r\n            A chart that shows you the difference between the rate of change of\r\n            your weight during a certain period of time and the normal rate that\r\n            you should follow\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Line data={data} options={options} type=\"line\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\authentication\\verify.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\video.jsx",["286"],"import React from \"react\";\r\nimport style from \"../assets/css/online.module.css\";\r\nimport vidIcon from \"../images/Path 20.svg\";\r\nimport star from \"../images/Path 2171.svg\";\r\n\r\nfunction video(props) {\r\n  return (\r\n    <div className={style.videos__child} onClick={()=>{\r\n      window.location.href=`/online/${props.id}`\r\n    }}>\r\n      <div className={style.videos__video}>\r\n        <div className={style.videos__image}>\r\n          <img src={props.image} alt=\"video\" className={style.videos__photo} />\r\n          <img src={vidIcon} alt=\"videoIcon\" className={style.videos__icon} />\r\n        </div>\r\n        <div className={style.videos__bio}>\r\n          <img src={props.photo} />\r\n          <div className={style.videos__about}>\r\n            <div className={style.videos__creatorName}>\r\n              <h3>{props.username}</h3>\r\n              <p>{props.createdAt}</p>\r\n            </div>\r\n\r\n            <p className={style.videos__info}>{props.title}</p>\r\n            <div className={style.videos__rating}>\r\n              <p>{props.views}</p>\r\n              <div>\r\n                {props.rating}\r\n                <img src={star} alt=\"star\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default video;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\TraineeCard.js",["287"],"import React from 'react';\r\nimport s from './Profile/Profile/Profile.module.css';\r\n\r\nfunction TraineeCard(props) {\r\n\treturn (\r\n\t\t<div className={s.card_container}>\r\n\t\t\t<div className={s.upper_container}>\r\n\t\t\t\t<div className={s.image_container}>\r\n\t\t\t\t\t<img src={props.photo} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.lower_container}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 style={{ lineHeight: 'initial' }}>{props.username}</h3>\r\n\t\t\t\t\t<div className={s.weight}>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tBefore: <span> {props.weights[0] ? props.weights[0].weight : 'begainer'} </span> kg{' '}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tAfter:{' '}\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{props.weights[props.weights.length - 1] ? (\r\n\t\t\t\t\t\t\t\t\tprops.weights[props.weights.length - 1].weight\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t'begainer'\r\n\t\t\t\t\t\t\t\t)}{' '}\r\n\t\t\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t\t\tkg{' '}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.points}>\r\n\t\t\t\t\t🏆 Points: <span>50</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{!props.trainer ? (\r\n\t\t\t\t\t\t<a href={`/profile/${props.id}`} className={s.btn}>\r\n\t\t\t\t\t\t\tView profile\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<a href={`/addDite/${props.id}`} className={s.btn}>\r\n\t\t\t\t\t\t\tAdd Diet\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TraineeCard;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\TrainerCard.js",["288","289","290"],"import React, { useContext, useState } from \"react\";\r\nimport s from \"./Profile/Profile/Profile.module.css\";\r\nimport Star from \"../images/Path 2171@2x.png\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport axios from \"axios\";\r\nimport authContext from \"../context/auth-context\";\r\n// axios;\r\nfunction TraineeCard(props) {\r\n  const [loadind, setLoading] = useState(false);\r\n  const auth = useContext(authContext);\r\n\r\n  let button = (\r\n    <div>\r\n      <a\r\n        href=\"#\"\r\n        className={s.btn}\r\n        onClick={() => {\r\n          if (props.requested && auth.auth.role !== \"gym\") {\r\n            if (!props.requested.includes(auth.auth.id)) {\r\n              setLoading(true);\r\n              axios\r\n                .post(`request?gym=${props.id}`)\r\n                .then((res) => {\r\n                  props.load(loadind);\r\n                  setLoading(false);\r\n                  console.log(res);\r\n                })\r\n                .catch((err) => {\r\n                  setLoading(false);\r\n                  console.log(err);\r\n                });\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {props.requested && auth.auth.role !== \"gym\"\r\n          ? props.requested.includes(auth.auth.id)\r\n            ? \"requested\"\r\n            : \"Add Request\"\r\n          : \"\"}\r\n      </a>\r\n    </div>\r\n  );\r\n  if (loadind) button = <Spinner btn={true} />;\r\n\r\n  return (\r\n    <div className={s.card_container}>\r\n      <div className={s.upper_container}>\r\n        <div className={s.image_container}>\r\n          <img src={props.photo} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.lower_container}>\r\n        <div>\r\n          <h3 style={{ lineHeight: \"initial\" }}>{props.username}</h3>\r\n        </div>\r\n        <div className={s.points}>\r\n          <img style={{ height: \"20px\" }} src={Star} /> Rating: <span>5</span>\r\n        </div>\r\n        {button}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TraineeCard;\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\messaging.jsx",["291","292"],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\contacts.jsx",["293","294"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport chatCss from \"../../assets/css/chat.module.css\";\r\nimport Contact from \"./contact\";\r\n\r\nfunction Contacts(props) {\r\n  const cons = useRef();\r\n\r\n  return (\r\n    <div className={`col-md-4 ${chatCss.side_chat}`}>\r\n      <div className={chatCss.search_box}>\r\n        <div className={chatCss.merge}>\r\n          <i className=\"material-icons\">search</i>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Here\"\r\n            ref={cons}\r\n            // onChange={(e) => dispatch(changingInput(e.target.value))}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={chatCss.all_friends}>\r\n        {props.contacts\r\n          ? props.contacts.map((c) => {\r\n              return (\r\n                <Contact\r\n                  key={c.id}\r\n                  id={c.id}\r\n                  clickedHandler={props.currentHandler}\r\n                  createdAt={c.createdAt}\r\n                  lastMessage={c.lastMessage}\r\n                  meta={c.meta}\r\n                  users={c.users}\r\n                  currentContact={props.currentContact}\r\n                  contact={c}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Contacts);\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Helper\\shared\\shared.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Helper\\Input\\Input.js",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\message.jsx",[],"G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\Components\\Chat\\contact.jsx",["295"],"import React from \"react\";\r\nimport chatCss from \"../../assets/css/chat.module.css\";\r\nimport moment from \"moment\";\r\nfunction Contact(props) {\r\n  return (\r\n    <>\r\n      <div\r\n        class={`${chatCss.friend} ${\r\n          props.currentContact\r\n            ? props.currentContact.id === props.id\r\n              ? chatCss.active\r\n              : \"\"\r\n            : \"\"\r\n        }`}\r\n        onClick={() => props.clickedHandler(props.contact)}\r\n      >\r\n        <img\r\n          src={\r\n           parseInt( props.users[0].id) ===parseInt( localStorage.getItem(\"userId\"))\r\n              ? props.users[1].photo\r\n              : props.users[0].photo\r\n          }\r\n          alt=\"friend image\"\r\n          class={chatCss.friend__img}\r\n        />\r\n        <div class={chatCss.friend__text}>\r\n          <h6>\r\n            {parseInt( props.users[0].id) ===parseInt( localStorage.getItem(\"userId\"))\r\n              ? props.users[1].username\r\n              : props.users[0].username}\r\n          </h6>\r\n          <p>{props.lastMessage ? props.lastMessage.content : \"no messages\"}</p>\r\n        </div>\r\n        <span class={chatCss.time}>\r\n          {moment(props.createdAt).format(\"YY/MM/DD hh:mm\")}\r\n        </span>\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Contact);\r\n","G:\\my_projects\\react\\smart laaast\\Smart-Fitness-Gym-main\\src\\firebase.js",[],{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","severity":1,"message":"301","line":79,"column":6,"nodeType":"302","endLine":79,"endColumn":8,"suggestions":"303"},{"ruleId":"300","severity":1,"message":"304","line":49,"column":6,"nodeType":"302","endLine":49,"endColumn":8,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":59,"column":26,"nodeType":"308","messageId":"309","endLine":59,"endColumn":28},{"ruleId":"300","severity":1,"message":"310","line":73,"column":6,"nodeType":"302","endLine":73,"endColumn":18,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":83,"column":19,"nodeType":"314","messageId":"315","endLine":83,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":85,"column":26,"nodeType":"314","messageId":"315","endLine":85,"endColumn":37},{"ruleId":"312","severity":1,"message":"313","line":88,"column":28,"nodeType":"314","messageId":"315","endLine":88,"endColumn":40},{"ruleId":"316","severity":1,"message":"317","line":90,"column":33,"nodeType":"314","messageId":"315","endLine":90,"endColumn":44},{"ruleId":"306","severity":1,"message":"318","line":204,"column":36,"nodeType":"308","messageId":"319","endLine":204,"endColumn":38},{"ruleId":"320","severity":1,"message":"321","line":107,"column":16,"nodeType":"322","messageId":"323","endLine":107,"endColumn":23},{"ruleId":"320","severity":1,"message":"324","line":108,"column":10,"nodeType":"322","messageId":"323","endLine":108,"endColumn":15},{"ruleId":"320","severity":1,"message":"325","line":110,"column":17,"nodeType":"322","messageId":"323","endLine":110,"endColumn":25},{"ruleId":"306","severity":1,"message":"318","line":61,"column":45,"nodeType":"308","messageId":"319","endLine":61,"endColumn":47},{"ruleId":"306","severity":1,"message":"318","line":72,"column":53,"nodeType":"308","messageId":"319","endLine":72,"endColumn":55},{"ruleId":"300","severity":1,"message":"326","line":99,"column":6,"nodeType":"302","endLine":99,"endColumn":22,"suggestions":"327"},{"ruleId":"320","severity":1,"message":"328","line":115,"column":11,"nodeType":"322","messageId":"323","endLine":115,"endColumn":23},{"ruleId":"329","severity":1,"message":"330","line":145,"column":21,"nodeType":"331","messageId":"332","endLine":145,"endColumn":23},{"ruleId":"329","severity":1,"message":"330","line":167,"column":23,"nodeType":"331","messageId":"332","endLine":167,"endColumn":25},{"ruleId":"329","severity":1,"message":"330","line":182,"column":23,"nodeType":"331","messageId":"332","endLine":182,"endColumn":25},{"ruleId":"306","severity":1,"message":"307","line":245,"column":33,"nodeType":"308","messageId":"309","endLine":245,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":255,"column":38,"nodeType":"308","messageId":"309","endLine":255,"endColumn":40},{"ruleId":"306","severity":1,"message":"307","line":276,"column":33,"nodeType":"308","messageId":"309","endLine":276,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":286,"column":38,"nodeType":"308","messageId":"309","endLine":286,"endColumn":40},{"ruleId":"333","severity":1,"message":"334","line":308,"column":19,"nodeType":"335","endLine":312,"endColumn":21},{"ruleId":"333","severity":1,"message":"334","line":330,"column":13,"nodeType":"335","endLine":337,"endColumn":15},{"ruleId":"336","severity":1,"message":"337","line":360,"column":17,"nodeType":"335","endLine":362,"endColumn":18},{"ruleId":"336","severity":1,"message":"337","line":365,"column":17,"nodeType":"335","endLine":367,"endColumn":18},{"ruleId":"320","severity":1,"message":"338","line":8,"column":8,"nodeType":"322","messageId":"323","endLine":8,"endColumn":15},{"ruleId":"306","severity":1,"message":"318","line":100,"column":43,"nodeType":"308","messageId":"319","endLine":100,"endColumn":45},{"ruleId":"306","severity":1,"message":"318","line":111,"column":51,"nodeType":"308","messageId":"319","endLine":111,"endColumn":53},{"ruleId":"300","severity":1,"message":"339","line":141,"column":6,"nodeType":"302","endLine":141,"endColumn":38,"suggestions":"340"},{"ruleId":"306","severity":1,"message":"307","line":222,"column":33,"nodeType":"308","messageId":"309","endLine":222,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":232,"column":38,"nodeType":"308","messageId":"309","endLine":232,"endColumn":40},{"ruleId":"306","severity":1,"message":"307","line":253,"column":33,"nodeType":"308","messageId":"309","endLine":253,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":263,"column":38,"nodeType":"308","messageId":"309","endLine":263,"endColumn":40},{"ruleId":"333","severity":1,"message":"334","line":46,"column":15,"nodeType":"335","endLine":52,"endColumn":17},{"ruleId":"300","severity":1,"message":"341","line":42,"column":6,"nodeType":"302","endLine":42,"endColumn":8,"suggestions":"342"},{"ruleId":"336","severity":1,"message":"337","line":131,"column":9,"nodeType":"335","endLine":135,"endColumn":10},{"ruleId":"336","severity":1,"message":"337","line":138,"column":9,"nodeType":"335","endLine":142,"endColumn":10},{"ruleId":"343","severity":1,"message":"344","line":147,"column":11,"nodeType":"335","endLine":154,"endColumn":12},{"ruleId":"300","severity":1,"message":"341","line":39,"column":6,"nodeType":"302","endLine":39,"endColumn":8,"suggestions":"345"},{"ruleId":"336","severity":1,"message":"337","line":90,"column":9,"nodeType":"335","endLine":94,"endColumn":10},{"ruleId":"336","severity":1,"message":"337","line":97,"column":9,"nodeType":"335","endLine":101,"endColumn":10},{"ruleId":"320","severity":1,"message":"346","line":10,"column":18,"nodeType":"322","messageId":"323","endLine":10,"endColumn":27},{"ruleId":"300","severity":1,"message":"347","line":46,"column":6,"nodeType":"302","endLine":46,"endColumn":8,"suggestions":"348"},{"ruleId":"329","severity":1,"message":"330","line":73,"column":21,"nodeType":"331","messageId":"332","endLine":73,"endColumn":23},{"ruleId":"300","severity":1,"message":"349","line":87,"column":6,"nodeType":"302","endLine":87,"endColumn":50,"suggestions":"350"},{"ruleId":"300","severity":1,"message":"351","line":87,"column":7,"nodeType":"352","endLine":87,"endColumn":49},{"ruleId":"336","severity":1,"message":"337","line":183,"column":9,"nodeType":"335","endLine":186,"endColumn":10},{"ruleId":"336","severity":1,"message":"337","line":189,"column":9,"nodeType":"335","endLine":192,"endColumn":10},{"ruleId":"320","severity":1,"message":"353","line":1,"column":27,"nodeType":"322","messageId":"323","endLine":1,"endColumn":36},{"ruleId":"336","severity":1,"message":"354","line":129,"column":21,"nodeType":"335","endLine":129,"endColumn":33},{"ruleId":"306","severity":1,"message":"307","line":27,"column":25,"nodeType":"308","messageId":"309","endLine":27,"endColumn":27},{"ruleId":"300","severity":1,"message":"355","line":28,"column":20,"nodeType":"331","endLine":28,"endColumn":90},{"ruleId":"306","severity":1,"message":"307","line":91,"column":26,"nodeType":"308","messageId":"309","endLine":91,"endColumn":28},{"ruleId":"306","severity":1,"message":"307","line":29,"column":27,"nodeType":"308","messageId":"309","endLine":29,"endColumn":29},{"ruleId":"300","severity":1,"message":"355","line":30,"column":22,"nodeType":"331","endLine":30,"endColumn":92},{"ruleId":"306","severity":1,"message":"307","line":95,"column":26,"nodeType":"308","messageId":"309","endLine":95,"endColumn":28},{"ruleId":"320","severity":1,"message":"356","line":1,"column":17,"nodeType":"322","messageId":"323","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"357","line":36,"column":19,"nodeType":"358","endLine":36,"endColumn":46},{"ruleId":"333","severity":1,"message":"334","line":17,"column":11,"nodeType":"335","endLine":17,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":9,"column":6,"nodeType":"335","endLine":9,"endColumn":31},{"ruleId":"336","severity":1,"message":"354","line":14,"column":7,"nodeType":"335","endLine":35,"endColumn":8},{"ruleId":"333","severity":1,"message":"334","line":50,"column":11,"nodeType":"335","endLine":50,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":59,"column":11,"nodeType":"335","endLine":59,"endColumn":56},{"ruleId":"320","severity":1,"message":"359","line":10,"column":19,"nodeType":"322","messageId":"323","endLine":10,"endColumn":29},{"ruleId":"360","severity":1,"message":"361","line":66,"column":9,"nodeType":"335","endLine":79,"endColumn":11},{"ruleId":"320","severity":1,"message":"353","line":1,"column":17,"nodeType":"322","messageId":"323","endLine":1,"endColumn":26},{"ruleId":"320","severity":1,"message":"362","line":1,"column":36,"nodeType":"322","messageId":"323","endLine":1,"endColumn":44},{"ruleId":"360","severity":1,"message":"361","line":17,"column":9,"nodeType":"335","endLine":25,"endColumn":11},"no-native-reassign",["363"],"no-negated-in-lhs",["364"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Auth'. Either include it or remove the dependency array.","ArrayExpression",["365"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["366"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.method'. Either include it or remove the dependency array.",["367"],"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","no-array-constructor","The array literal notation [] is preferable.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unused-vars","'setMark' is assigned a value but never used.","Identifier","unusedVar","'place' is assigned a value but never used.","'setClear' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'weekIndex'. Either include it or remove the dependency array.",["368"],"'sliderImages' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'weekIndex'. Either include them or remove the dependency array.",["369"],"React Hook useEffect has a missing dependency: 'counter'. Either include it or remove the dependency array.",["370"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["371"],"'setSearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAll'. Either include it or remove the dependency array.",["372"],"React Hook useEffect has a missing dependency: 'contacts'. Either include it or remove the dependency array.",["373"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'useEffect' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Assignments to the 'allCalories' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'Component' is defined but never used.","Assignments to the 'current' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'setMessage' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"384","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},"Update the dependencies array to be: [Auth]",{"range":"391","text":"392"},"Update the dependencies array to be: [props]",{"range":"393","text":"394"},"Update the dependencies array to be: [props.food, props.method]",{"range":"395","text":"396"},"Update the dependencies array to be: [currentTrainee, weekIndex]",{"range":"397","text":"398"},"Update the dependencies array to be: [loading, loading2, props.match.params.id, props.open2, weekIndex]",{"range":"399","text":"400"},"Update the dependencies array to be: [counter]",{"range":"401","text":"402"},{"range":"403","text":"402"},"Update the dependencies array to be: [fetchAll]",{"range":"404","text":"405"},"Update the dependencies array to be: [contacts]",{"range":"406","text":"407"},[2645,2647],"[Auth]",[1365,1367],"[props]",[2048,2060],"[props.food, props.method]",[3236,3252],"[currentTrainee, weekIndex]",[4379,4411],"[loading, loading2, props.match.params.id, props.open2, weekIndex]",[1345,1347],"[counter]",[1234,1236],[1621,1623],"[fetchAll]",[2907,2951],"[contacts]"]